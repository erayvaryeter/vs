"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();function defaultComparator(e,t){if(Number.isFinite(e)&&Number.isFinite(t))return e-t;var r=typeof e,i=typeof t;if(r!==i)return r<i?-1:1;if("object"===r){if(null===e)return null===t?0:-1;if(null===t)return 1;if((r=typeof(e=e.valueOf()))!==(i=typeof(t=t.valueOf())))return r<i?-1:1}return e<t?-1:t<e?1:e===t?0:Number.isNaN(e)?Number.isNaN(t)?0:-1:Number.isNaN(t)?1:Array.isArray(e)?0:Number.NaN}function simpleComparator(e,t){return t<e?1:e<t?-1:0}Object.defineProperty(exports,"__esModule",{value:!0}),exports.EmptyBTree=exports.simpleComparator=exports.defaultComparator=void 0,exports.defaultComparator=defaultComparator,exports.simpleComparator=simpleComparator;var BTree=function(){function x(e,t,r){this._root=EmptyLeaf,this._size=0,this._maxNodeSize=4<=r?Math.min(r,256):32,this._compare=t||defaultComparator,e&&this.setPairs(e)}return Object.defineProperty(x.prototype,"size",{get:function(){return this._size},enumerable:!1,configurable:!0}),Object.defineProperty(x.prototype,"length",{get:function(){return this._size},enumerable:!1,configurable:!0}),Object.defineProperty(x.prototype,"isEmpty",{get:function(){return 0===this._size},enumerable:!1,configurable:!0}),x.prototype.clear=function(){this._root=EmptyLeaf,this._size=0},x.prototype.forEach=function(r,e){var i=this;return void 0!==e&&(r=r.bind(e)),this.forEachPair(function(e,t){return r(t,e,i)})},x.prototype.forEachPair=function(e,t){var r=this.minKey(),i=this.maxKey();return this.forRange(r,i,!0,e,t)},x.prototype.get=function(e,t){return this._root.get(e,t,this)},x.prototype.set=function(e,t,r){this._root.isShared&&(this._root=this._root.clone());r=this._root.set(e,t,r,this);return!0===r||!1===r?r:(this._root=new BNodeInternal([this._root,r]),!0)},x.prototype.has=function(e){return 0!==this.forRange(e,e,!0,void 0)},x.prototype.delete=function(e){return 0!==this.editRange(e,e,!0,DeleteRange)},x.prototype.with=function(e,t,r){var i=this.clone();return i.set(e,t,r)||r?i:this},x.prototype.withPairs=function(e,t){var r=this.clone();return 0!==r.setPairs(e,t)||t?r:this},x.prototype.withKeys=function(e,t){for(var r=this.clone(),i=!1,n=0;n<e.length;n++)i=r.set(e[n],void 0,!1)||i;return t&&!i?this:r},x.prototype.without=function(e,t){return this.withoutRange(e,e,!0,t)},x.prototype.withoutKeys=function(e,t){var r=this.clone();return r.deleteKeys(e)||!t?r:this},x.prototype.withoutRange=function(e,t,r,i){var n=this.clone();return 0===n.deleteRange(e,t,r)&&i?this:n},x.prototype.filter=function(i,e){var n,t=this.greedyClone();return t.editAll(function(e,t,r){if(!i(e,t,r))return n=Delete}),!n&&e?this:t},x.prototype.mapValues=function(i){var n={},e=this.greedyClone();return e.editAll(function(e,t,r){return n.value=i(t,e,r),n}),e},x.prototype.reduce=function(e,t){for(var r,i=0,n=t,o=this.entries(this.minKey(),ReusedArray);!(r=o.next()).done;)n=e(n,r.value,i++,this);return n},x.prototype.entries=function(e,t){var r=this.findPath(e);if(void 0===r)return iterator();var i=r.nodequeue,n=r.nodeindex,o=r.leaf,s=void 0!==t?1:0,a=void 0===e?-1:o.indexOf(e,0,this._compare)-1;return iterator(function(){e:for(;;)switch(s){case 0:if(++a<o.keys.length)return{done:!1,value:[o.keys[a],o.values[a]]};s=2;continue;case 1:if(++a<o.keys.length)return t[0]=o.keys[a],t[1]=o.values[a],{done:!1,value:t};s=2;case 2:for(var e=-1;;){if(++e>=i.length){s=3;continue e}if(++n[e]<i[e].length)break}for(;0<e;e--)i[e-1]=i[e][n[e]].children,n[e-1]=0;o=i[0][n[0]],a=-1,s=void 0!==t?1:0;continue;case 3:return{done:!0,value:void 0}}})},x.prototype.entriesReversed=function(e,t,r){if(void 0===e&&(r=void 0)===(e=this.maxKey()))return iterator();var i=this.findPath(e)||this.findPath(this.maxKey()),n=i.nodequeue,o=i.nodeindex,s=i.leaf;check(!n[0]||s===n[0][o[0]],"wat!");var a=s.indexOf(e,0,this._compare);!r&&a<s.keys.length&&this._compare(s.keys[a],e)<=0&&a++;var h=void 0!==t?1:0;return iterator(function(){e:for(;;)switch(h){case 0:if(0<=--a)return{done:!1,value:[s.keys[a],s.values[a]]};h=2;continue;case 1:if(0<=--a)return t[0]=s.keys[a],t[1]=s.values[a],{done:!1,value:t};h=2;case 2:for(var e=-1;;){if(++e>=n.length){h=3;continue e}if(0<=--o[e])break}for(;0<e;e--)n[e-1]=n[e][o[e]].children,o[e-1]=n[e-1].length-1;s=n[0][o[0]],a=s.keys.length,h=void 0!==t?1:0;continue;case 3:return{done:!0,value:void 0}}})},x.prototype.findPath=function(e){var t,r,i=this._root;if(i.isLeaf)r=t=EmptyArray;else{t=[],r=[];for(var n=0;!i.isLeaf;n++){if(t[n]=i.children,r[n]=void 0===e?0:i.indexOf(e,0,this._compare),r[n]>=t[n].length)return;i=t[n][r[n]]}t.reverse(),r.reverse()}return{nodequeue:t,nodeindex:r,leaf:i}},x.prototype.diffAgainst=function(e,t,r,i){if(e._compare!==this._compare)throw new Error("Tree comparators are not the same.");if(this.isEmpty||e.isEmpty)return this.isEmpty&&e.isEmpty?void 0:this.isEmpty?void 0===r?void 0:x.stepToEnd(x.makeDiffCursor(e),r):void 0===t?void 0:x.stepToEnd(x.makeDiffCursor(this),t);for(var n=this._compare,o=x.makeDiffCursor(this),s=x.makeDiffCursor(e),a=!0,h=!0,u=x.compare(o,s,n);a&&h;){var l=x.compare(o,s,n),f=o.leaf,p=o.internalSpine,c=o.levelIndices,y=s.leaf,d=s.internalSpine,v=s.levelIndices;if(f||y){if(0!==u)if(0===l){if(f&&y&&i){var g=f.values[c[c.length-1]],m=y.values[v[v.length-1]];if(!Object.is(g,m))if((k=i(o.currentKey,g,m))&&k.break)return k.break}}else if(0<l){if(y&&r){m=y.values[v[v.length-1]];if((k=r(s.currentKey,m))&&k.break)return k.break}}else if(t&&f&&0!==u){var k,g=f.values[c[c.length-1]];if((k=t(o.currentKey,g))&&k.break)return k.break}}else if(!f&&!y&&0===l){f=p.length-1,y=d.length-1,f=p[f][c[f]];if(d[y][v[y]]===f){a=x.step(o,!(u=0)),h=x.step(s,!0);continue}}(u=l)<0?a=x.step(o):h=x.step(s)}return a&&t?x.finishCursorWalk(o,s,n,t):h&&r?x.finishCursorWalk(s,o,n,r):void 0},x.finishCursorWalk=function(e,t,r,i){r=x.compare(e,t,r);if(0===r){if(!x.step(e))return}else r<0&&check(!1,"cursor walk terminated early");return x.stepToEnd(e,i)},x.stepToEnd=function(e,t){for(var r=!0;r;){var i=e.leaf,n=e.levelIndices,o=e.currentKey;if(i){n=t(o,i.values[n[n.length-1]]);if(n&&n.break)return n.break}r=x.step(e)}},x.makeDiffCursor=function(e){var t=e._root;return{height:e.height,internalSpine:[[t]],levelIndices:[0],leaf:void 0,currentKey:t.maxKey()}},x.step=function(e,t){var r=e.internalSpine,i=e.levelIndices,n=e.leaf;if(!0===t||n){var o=i.length;if(!0===t||0===i[o-1]){var s=r.length;if(0===s)return!1;for(var a=s-1,h=a;0<=h;){if(0<i[h])return h<o-1&&(e.leaf=void 0,i.pop()),h<a&&(e.internalSpine=r.slice(0,h+1)),e.currentKey=r[h][--i[h]].maxKey(),!0;h--}return!1}var u=--i[o-1];return e.currentKey=n.keys[u],!0}s=r.length,n=s-1,n=r[n][i[n]];return n.isLeaf?(e.leaf=n,u=i[s]=n.values.length-1,e.currentKey=n.keys[u]):(u=n.children,n=(r[s]=u).length-1,i[s]=n,e.currentKey=u[n].maxKey()),!0},x.compare=function(e,t,r){var i=e.height,n=e.currentKey,o=e.levelIndices,s=t.height,e=t.currentKey,t=t.levelIndices,n=r(e,n);if(0!==n)return n;n=i<s?i:s;return o.length-(i-n)-(t.length-(s-n))},x.prototype.keys=function(e){var t=this.entries(e,ReusedArray);return iterator(function(){var e=t.next();return e.value&&(e.value=e.value[0]),e})},x.prototype.values=function(e){var t=this.entries(e,ReusedArray);return iterator(function(){var e=t.next();return e.value&&(e.value=e.value[1]),e})},Object.defineProperty(x.prototype,"maxNodeSize",{get:function(){return this._maxNodeSize},enumerable:!1,configurable:!0}),x.prototype.minKey=function(){return this._root.minKey()},x.prototype.maxKey=function(){return this._root.maxKey()},x.prototype.clone=function(){this._root.isShared=!0;var e=new x(void 0,this._compare,this._maxNodeSize);return e._root=this._root,e._size=this._size,e},x.prototype.greedyClone=function(e){var t=new x(void 0,this._compare,this._maxNodeSize);return t._root=this._root.greedyClone(e),t._size=this._size,t},x.prototype.toArray=function(e){void 0===e&&(e=2147483647);var t=this.minKey(),r=this.maxKey();return void 0!==t?this.getRange(t,r,!0,e):[]},x.prototype.keysArray=function(){var r=[];return this._root.forRange(this.minKey(),this.maxKey(),!0,!1,this,0,function(e,t){r.push(e)}),r},x.prototype.valuesArray=function(){var r=[];return this._root.forRange(this.minKey(),this.maxKey(),!0,!1,this,0,function(e,t){r.push(t)}),r},x.prototype.toString=function(){return this.toArray().toString()},x.prototype.setIfNotPresent=function(e,t){return this.set(e,t,!1)},x.prototype.nextHigherPair=function(e,t){return t=t||[],void 0===e?this._root.minPair(t):this._root.getPairOrNextHigher(e,this._compare,!1,t)},x.prototype.nextHigherKey=function(e){e=this.nextHigherPair(e,ReusedArray);return e&&e[0]},x.prototype.nextLowerPair=function(e,t){return t=t||[],void 0===e?this._root.maxPair(t):this._root.getPairOrNextLower(e,this._compare,!1,t)},x.prototype.nextLowerKey=function(e){e=this.nextLowerPair(e,ReusedArray);return e&&e[0]},x.prototype.getPairOrNextLower=function(e,t){return this._root.getPairOrNextLower(e,this._compare,!0,t||[])},x.prototype.getPairOrNextHigher=function(e,t){return this._root.getPairOrNextHigher(e,this._compare,!0,t||[])},x.prototype.changeIfPresent=function(e,r){return 0!==this.editRange(e,e,!0,function(e,t){return{value:r}})},x.prototype.getRange=function(e,t,r,i){void 0===i&&(i=67108863);var n=[];return this._root.forRange(e,t,r,!1,this,0,function(e,t){return n.push([e,t]),n.length>i?Break:void 0}),n},x.prototype.setPairs=function(e,t){for(var r=0,i=0;i<e.length;i++)this.set(e[i][0],e[i][1],t)&&r++;return r},x.prototype.forRange=function(e,t,r,i,n){i=this._root.forRange(e,t,r,!1,this,n||0,i);return"number"==typeof i?i:i.break},x.prototype.editRange=function(e,t,r,i,n){var o=this._root;o.isShared&&(this._root=o=o.clone());try{var s=o.forRange(e,t,r,!0,this,n||0,i);return"number"==typeof s?s:s.break}finally{for(;o.keys.length<=1&&!o.isLeaf;)this._root=o=0===o.keys.length?EmptyLeaf:o.children[0]}},x.prototype.editAll=function(e,t){return this.editRange(this.minKey(),this.maxKey(),!0,e,t)},x.prototype.deleteRange=function(e,t,r){return this.editRange(e,t,r,DeleteRange)},x.prototype.deleteKeys=function(e){for(var t=0,r=0;t<e.length;t++)this.delete(e[t])&&r++;return r},Object.defineProperty(x.prototype,"height",{get:function(){for(var e=this._root,t=-1;e;)t++,e=e.isLeaf?void 0:e.children[0];return t},enumerable:!1,configurable:!0}),x.prototype.freeze=function(){this.clear=this.set=this.editRange=function(){throw new Error("Attempted to modify a frozen BTree")}},x.prototype.unfreeze=function(){delete this.clear,delete this.set,delete this.editRange},Object.defineProperty(x.prototype,"isFrozen",{get:function(){return this.hasOwnProperty("editRange")},enumerable:!1,configurable:!0}),x.prototype.checkValid=function(){var e=this._root.checkValid(0,this,0);check(e===this.size,"size mismatch: counted ",e,"but stored",this.size)},x}();function iterator(e){void 0===e&&(e=function(){return{done:!0,value:void 0}});e={next:e};return Symbol&&Symbol.iterator&&(e[Symbol.iterator]=function(){return this}),e}exports.default=BTree,Symbol&&Symbol.iterator&&(BTree.prototype[Symbol.iterator]=BTree.prototype.entries),BTree.prototype.where=BTree.prototype.filter,BTree.prototype.setRange=BTree.prototype.setPairs,BTree.prototype.add=BTree.prototype.set;var BNode=function(){function t(e,t){void 0===e&&(e=[]),this.keys=e,this.values=t||undefVals,this.isShared=void 0}return Object.defineProperty(t.prototype,"isLeaf",{get:function(){return void 0===this.children},enumerable:!1,configurable:!0}),t.prototype.maxKey=function(){return this.keys[this.keys.length-1]},t.prototype.indexOf=function(e,t,r){for(var i=this.keys,n=0,o=i.length,s=o>>1;n<o;){var a=r(i[s],e);if(a<0)n=s+1;else{if(!(0<a)){if(0===a)return s;if(e==e)return i.length;throw new Error("BTree: NaN was used as a key")}o=s}s=n+o>>1}return s^t},t.prototype.minKey=function(){return this.keys[0]},t.prototype.minPair=function(e){if(0!==this.keys.length)return e[0]=this.keys[0],e[1]=this.values[0],e},t.prototype.maxPair=function(e){if(0!==this.keys.length){var t=this.keys.length-1;return e[0]=this.keys[t],e[1]=this.values[t],e}},t.prototype.clone=function(){var e=this.values;return new t(this.keys.slice(0),e===undefVals?e:e.slice(0))},t.prototype.greedyClone=function(e){return this.isShared&&!e?this:this.clone()},t.prototype.get=function(e,t,r){r=this.indexOf(e,-1,r._compare);return r<0?t:this.values[r]},t.prototype.getPairOrNextLower=function(e,t,r,i){t=this.indexOf(e,-1,t),t=t<0?~t-1:r?t:t-1;if(0<=t)return i[0]=this.keys[t],i[1]=this.values[t],i},t.prototype.getPairOrNextHigher=function(e,t,r,i){t=this.indexOf(e,-1,t),r=t<0?~t:r?t:t+1,t=this.keys;if(r<t.length)return i[0]=t[r],i[1]=this.values[r],i},t.prototype.checkValid=function(e,t,r){var i=this.keys.length,n=this.values.length;return check(this.values===undefVals?i<=n:i===n,"keys/values length mismatch: depth",e,"with lengths",i,n,"and baseIndex",r),check(0==e||0<i,"empty leaf at depth",e,"and baseIndex",r),i},t.prototype.set=function(e,t,r,i){var n=this.indexOf(e,-1,i._compare);if(n<0){if(n=~n,i._size++,this.keys.length<i._maxNodeSize)return this.insertInLeaf(n,e,t,i);var o=this.splitOffRightSide(),s=this;return n>this.keys.length&&(n-=this.keys.length,s=o),s.insertInLeaf(n,e,t,i),o}return!1!==r&&(void 0!==t&&this.reifyValues(),this.keys[n]=e,this.values[n]=t),!1},t.prototype.reifyValues=function(){return this.values===undefVals?this.values=this.values.slice(0,this.keys.length):this.values},t.prototype.insertInLeaf=function(e,t,r,i){if(this.keys.splice(e,0,t),this.values===undefVals){for(;undefVals.length<i._maxNodeSize;)undefVals.push(void 0);if(void 0===r)return!0;this.values=undefVals.slice(0,this.keys.length-1)}return this.values.splice(e,0,r),!0},t.prototype.takeFromRight=function(e){var t=this.values;e.values===undefVals?t!==undefVals&&t.push(void 0):(t=this.reifyValues()).push(e.values.shift()),this.keys.push(e.keys.shift())},t.prototype.takeFromLeft=function(e){var t=this.values;e.values===undefVals?t!==undefVals&&t.unshift(void 0):(t=this.reifyValues()).unshift(e.values.pop()),this.keys.unshift(e.keys.pop())},t.prototype.splitOffRightSide=function(){var e=this.keys.length>>1;return new t(this.keys.splice(e),this.values===undefVals?undefVals:this.values.splice(e))},t.prototype.forRange=function(e,t,r,i,n,o,s){var a,h,u=n._compare;if(t===e){if(!r)return o;if(h=(a=this.indexOf(e,-1,u))+1,a<0)return o}else a=this.indexOf(e,0,u),(h=this.indexOf(t,-1,u))<0?h=~h:!0===r&&h++;var l=this.keys,f=this.values;if(void 0!==s)for(var p=a;p<h;p++){var c=l[p],y=s(c,f[p],o++);if(void 0!==y){if(!0===i){if(c!==l[p]||!0===this.isShared)throw new Error("BTree illegally changed or cloned in editRange");y.delete?(this.keys.splice(p,1),this.values!==undefVals&&this.values.splice(p,1),n._size--,p--,h--):y.hasOwnProperty("value")&&(f[p]=y.value)}if(void 0!==y.break)return y}}else o+=h-a;return o},t.prototype.mergeSibling=function(e,t){if(this.keys.push.apply(this.keys,e.keys),this.values===undefVals){if(e.values===undefVals)return;this.values=this.values.slice(0,this.keys.length)}this.values.push.apply(this.values,e.reifyValues())},t}(),BNodeInternal=function(n){function i(e,t){var r=this;if(!t){t=[];for(var i=0;i<e.length;i++)t[i]=e[i].maxKey()}return(r=n.call(this,t)||this).children=e,r}return __extends(i,n),i.prototype.clone=function(){for(var e=this.children.slice(0),t=0;t<e.length;t++)e[t].isShared=!0;return new i(e,this.keys.slice(0))},i.prototype.greedyClone=function(e){if(this.isShared&&!e)return this;for(var t=new i(this.children.slice(0),this.keys.slice(0)),r=0;r<t.children.length;r++)t.children[r]=t.children[r].greedyClone();return t},i.prototype.minKey=function(){return this.children[0].minKey()},i.prototype.minPair=function(e){return this.children[0].minPair(e)},i.prototype.maxPair=function(e){return this.children[this.children.length-1].maxPair(e)},i.prototype.get=function(e,t,r){var i=this.indexOf(e,0,r._compare),n=this.children;return i<n.length?n[i].get(e,t,r):void 0},i.prototype.getPairOrNextLower=function(e,t,r,i){var n=this.indexOf(e,0,t),o=this.children;if(n>=o.length)return this.maxPair(i);r=o[n].getPairOrNextLower(e,t,r,i);return void 0===r&&0<n?o[n-1].maxPair(i):r},i.prototype.getPairOrNextHigher=function(e,t,r,i){var n=this.indexOf(e,0,t),o=this.children,s=o.length;if(!(s<=n)){r=o[n].getPairOrNextHigher(e,t,r,i);return void 0===r&&n<s-1?o[n+1].minPair(i):r}},i.prototype.checkValid=function(e,t,r){var i=this.keys.length,n=this.children.length;check(i===n,"keys/children length mismatch: depth",e,"lengths",i,n,"baseIndex",r),check(1<i||0<e,"internal node has length",i,"at depth",e,"baseIndex",r);for(var o=0,s=this.children,a=this.keys,h=0,u=0;u<n;u++)o+=s[u].checkValid(e+1,t,r+o),check((h+=s[u].keys.length)<=o,"wtf",r),check(0===u||s[u-1].constructor===s[u].constructor,"type mismatch, baseIndex:",r),s[u].maxKey()!=a[u]&&check(!1,"keys[",u,"] =",a[u],"is wrong, should be ",s[u].maxKey(),"at depth",e,"baseIndex",r),0===u||t._compare(a[u-1],a[u])<0||check(!1,"sort violation at depth",e,"index",u,"keys",a[u-1],a[u]);i=0===h;return(i||h>t.maxNodeSize*n)&&check(!1,i?"too few":"too many","children (",h,o,") at depth",e,"maxNodeSize:",t.maxNodeSize,"children.length:",n,"baseIndex:",r),o},i.prototype.set=function(e,t,r,i){var n,o=this.children,s=i._maxNodeSize,a=i._compare,h=Math.min(this.indexOf(e,0,a),o.length-1),u=o[h];u.isShared&&(o[h]=u=u.clone()),u.keys.length>=s&&(0<h&&(n=o[h-1]).keys.length<s&&a(u.keys[0],e)<0?(n.isShared&&(o[h-1]=n=n.clone()),n.takeFromRight(u),this.keys[h-1]=n.maxKey()):void 0!==(n=o[h+1])&&n.keys.length<s&&a(u.maxKey(),e)<0&&(n.isShared&&(o[h+1]=n=n.clone()),n.takeFromLeft(u),this.keys[h]=o[h].maxKey()));i=u.set(e,t,r,i);if(!1===i)return!1;if(this.keys[h]=u.maxKey(),!0===i)return!0;if(this.keys.length<s)return this.insert(h+1,i),!0;u=this.splitOffRightSide(),s=this;return 0<a(i.maxKey(),this.maxKey())&&(s=u,h-=this.keys.length),s.insert(h+1,i),u},i.prototype.insert=function(e,t){this.children.splice(e,0,t),this.keys.splice(e,0,t.maxKey())},i.prototype.splitOffRightSide=function(){var e=this.children.length>>1;return new i(this.children.splice(e),this.keys.splice(e))},i.prototype.takeFromRight=function(e){this.keys.push(e.keys.shift()),this.children.push(e.children.shift())},i.prototype.takeFromLeft=function(e){this.keys.unshift(e.keys.pop()),this.children.unshift(e.children.pop())},i.prototype.forRange=function(e,t,r,i,n,o,s){var a=n._compare,h=this.keys,u=this.children,l=this.indexOf(e,0,a),f=l,p=Math.min(t===e?l:this.indexOf(t,0,a),h.length-1);if(i){if(f<=p)try{for(;f<=p;f++){u[f].isShared&&(u[f]=u[f].clone());var c=u[f].forRange(e,t,r,i,n,o,s);if(h[f]=u[f].maxKey(),"number"!=typeof c)return c;o=c}}finally{var y=n._maxNodeSize>>1;for(0<l&&l--,f=p;l<=f;f--)u[f].keys.length<=y&&(0!==u[f].keys.length?this.tryMerge(f,n._maxNodeSize):(h.splice(f,1),u.splice(f,1)));0!==u.length&&0===u[0].keys.length&&check(!1,"emptiness bug")}}else for(;f<=p;f++){if("number"!=typeof(c=u[f].forRange(e,t,r,i,n,o,s)))return c;o=c}return o},i.prototype.tryMerge=function(e,t){var r=this.children;return 0<=e&&e+1<r.length&&r[e].keys.length+r[e+1].keys.length<=t&&(r[e].isShared&&(r[e]=r[e].clone()),r[e].mergeSibling(r[e+1],t),r.splice(e+1,1),this.keys.splice(e+1,1),this.keys[e]=r[e].maxKey(),!0)},i.prototype.mergeSibling=function(e,t){var r=this.keys.length;this.keys.push.apply(this.keys,e.keys),this.children.push.apply(this.children,e.children),this.tryMerge(r-1,t)},i}(BNode),undefVals=[],Delete={delete:!0},DeleteRange=function(){return Delete},Break={break:!0},EmptyLeaf=function(){var e=new BNode;return e.isShared=!0,e}(),EmptyArray=[],ReusedArray=[];function check(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];if(!e)throw t.unshift("B+ tree"),new Error(t.join(" "))}exports.EmptyBTree=function(){var e=new BTree;return e.freeze(),e}();
// SIG // Begin signature block
// SIG // MIIoTAYJKoZIhvcNAQcCoIIoPTCCKDkCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // iQr9oh3IxqxrzqRL2GsiWOmzgi7IHCMZdWVGXt8FpGmg
// SIG // gg2aMIIGGDCCBACgAwIBAgITMwAAA4MUYnEL35umPQAA
// SIG // AAADgzANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIzMDcxMzIzNDUzNloX
// SIG // DTI0MDkxNTIzNDUzNlowgYgxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xMjAwBgNVBAMTKU1pY3Jvc29mdCAzcmQgUGFydHkg
// SIG // QXBwbGljYXRpb24gQ29tcG9uZW50MIIBIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlZ6RXxi6ssQbUoLu
// SIG // wsUg8Lzx5c2UB0kc6aIwqPLgFQAHd8Fujs2eO7JzXVxA
// SIG // 1yizqWqcy/7OQ0BytzPoM0/Dos4MCCt8Vofm41J7qoJl
// SIG // I1vRt3RH0+n1edFpKi+XbOdDqqZBPjx/fBLFa4HL5UD3
// SIG // u8adFOmz/YuCgHsv8q5oyzgtiH9cRamcUEBldYeb1jzo
// SIG // giSktqGeOO6bBVCq0Y2pOCSEOpAqRHZWuRoZrBnR9Dxb
// SIG // +54fqFuM9OaHQAt025PPApw4G2yWSerss9TEOVJ7YJ9F
// SIG // 3QnkBGwbHIqREw+zUQtdEI9kAai6NiD8U9tS/3QufZz7
// SIG // DI2Pnw3pnwQOKRUOkwIDAQABo4IBgjCCAX4wHwYDVR0l
// SIG // BBgwFgYKKwYBBAGCN0wRAQYIKwYBBQUHAwMwHQYDVR0O
// SIG // BBYEFLbqIlKYyBFhlR+UbIclG3Vb31x0MFQGA1UdEQRN
// SIG // MEukSTBHMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJlbGFu
// SIG // ZCBPcGVyYXRpb25zIExpbWl0ZWQxFjAUBgNVBAUTDTIz
// SIG // MTUyMis1MDExNTcwHwYDVR0jBBgwFoAUSG5k5VAF04Kq
// SIG // Fzc3IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0
// SIG // cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwv
// SIG // TWljQ29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBh
// SIG // BggrBgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMv
// SIG // TWljQ29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAM
// SIG // BgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQCJ
// SIG // u41n3onudflWf5dguZipzkHZ0JlADjVYe784mJX5VJmr
// SIG // HvDbRbrhTzKYbcLbmx+rWTEZRhw5jw7QOL1+jNCMOAY6
// SIG // B0oP7JBaChHiAB5TpshNEQeN5k7jTr3cGtCUj1juXunt
// SIG // Q9Acop2puL6yuximi+NR3GMAYuW/DbxpQM+ber+NUEGH
// SIG // /HuQr19f+dbkCG+BtFoVXl+ojFbLNDHIletniochj1F5
// SIG // RpXdMXJSWVeJKKNbBuGa7ln+T1XpUMUNG+UEHKmU5W1Q
// SIG // W9HrKW6FWsYeQff6INGLQ9tFf3lvnvukVdJjljyvr/Om
// SIG // Qvl1aUlShMIxc1koeIbMkmqB3Q2ASKixX1wOnxh80FcN
// SIG // RtcfvlsSfMhQ9t8BTfaQlOHASTB4ru/9bKHTQsMN99iN
// SIG // j5FP9M/GC2LRLiAw2zAcakmpj8LIdzBu3pE+5ZXROaWF
// SIG // IGcglS35OoEbt1M06gQaTm/a2NSU5KBknAaJQgCR0ldX
// SIG // mTtwoFRWbcAX2hUzf9K2xShNjKZinJHvQPR3O/MU23yL
// SIG // hzwKPQIky08+hC8FJWgT8XGyAPr1J0f3rgj+zk84SB42
// SIG // 8Au95BCZDrrElk1cWp/P3KS32Q2fVUoTGE/vvv5avrc1
// SIG // +UQft1kjY4FTDUL8PwatVilcS755GJKVhjdFOGE7+H7I
// SIG // 6qUgCthUvGTHBguMTE49qjCCB3owggVioAMCAQICCmEO
// SIG // kNIAAAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNV
// SIG // BAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYD
// SIG // VQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQg
// SIG // Q29ycG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBS
// SIG // b290IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4X
// SIG // DTExMDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjEL
// SIG // MAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
// SIG // EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv
// SIG // c29mdCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9z
// SIG // b2Z0IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJ
// SIG // KoZIhvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t
// SIG // 2G6qghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7d
// SIG // N2vGEtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55J
// SIG // nOloXtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJS
// SIG // JhIv56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64Dhk
// SIG // rG5kNXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ9
// SIG // 7/vjK1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+
// SIG // sYxd6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4
// SIG // ftKdgCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf
// SIG // 8NBSv4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOn
// SIG // qWbsYR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj
// SIG // 43BdD1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8
// SIG // GLhEfEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO
// SIG // 3+xbn6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4
// SIG // X7IvhNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXU
// SIG // pUMvdJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxG
// SIG // oGyY0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3
// SIG // FQEEAwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVt
// SIG // qMp1ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEw
// SIG // CwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYD
// SIG // VR0jBBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYD
// SIG // VR0fBFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3Nv
// SIG // ZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2Vy
// SIG // QXV0MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcB
// SIG // AQRSMFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWlj
// SIG // cm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGU
// SIG // MIGRBgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0
// SIG // dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9j
// SIG // cy9wcmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIg
// SIG // HQBMAGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABh
// SIG // AHQAZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOC
// SIG // AgEAZ/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQ
// SIG // wWVfLiw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZdd
// SIG // ZYSQfYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9
// SIG // G6XUtR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKK
// SIG // ELukqQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP
// SIG // 80Yr3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ
// SIG // 1h/DMhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgy
// SIG // cScaf7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6C
// SIG // PxNNZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2
// SIG // l4bf2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1
// SIG // HxS+YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9
// SIG // WfOXpQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpI
// SIG // lR+r+0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h1
// SIG // 5q/6/IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BX
// SIG // IqF4ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3Zb
// SIG // CoBIa/15n8G9bW1qyVJzEw16UM0xghoKMIIaBgIBATCB
// SIG // lTB+MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9N
// SIG // aWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMz
// SIG // AAADgxRicQvfm6Y9AAAAAAODMA0GCWCGSAFlAwQCAQUA
// SIG // oIGuMBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwG
// SIG // CisGAQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqG
// SIG // SIb3DQEJBDEiBCDkldtTehMX+m9Mvxq5mlJjgnnPjUOc
// SIG // kZXESAKxKR8JUDBCBgorBgEEAYI3AgEMMTQwMqAUgBIA
// SIG // TQBpAGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5t
// SIG // aWNyb3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBAEt2
// SIG // GT3Gt1FrbnIxQb5wltN2Np9WmC14dlUQMvDtSeQS5qB7
// SIG // GqycNVQ8KfSwVSFnCQ1w1gUNL64rGxMGIAdRBxCACd1T
// SIG // GPDM2GSkCVIf+z0X/HZna0tYfcnw/ocWi/vldqjXUcpS
// SIG // slnCUvz5QEfBSNT/72dxuN6koX1iSn6lqztTr6fzfPNz
// SIG // jQ47HRU0/aRRqj4zc7uMtKbjcB4nwGDTSLrz5dwRbCVh
// SIG // cvg/MaHebucIADunf/0tBMex6laTD6ZSfmAdLekR+TT6
// SIG // MeM5X1egy4h5nQlBBibYnx2ljNGOL+VN956sovvAgVC7
// SIG // cCWLjEJyP75oBPP58iUuhhVbD9msKuChgheUMIIXkAYK
// SIG // KwYBBAGCNwMDATGCF4Awghd8BgkqhkiG9w0BBwKgghdt
// SIG // MIIXaQIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBUgYLKoZI
// SIG // hvcNAQkQAQSgggFBBIIBPTCCATkCAQEGCisGAQQBhFkK
// SIG // AwEwMTANBglghkgBZQMEAgEFAAQgtWOqaWi9VswW2sVR
// SIG // 3UTaKMWMzR1ukLqdoO3hWarfZEMCBmVWwxez/xgTMjAy
// SIG // MzEyMTIxOTAzNDMuOTY5WjAEgAIB9KCB0aSBzjCByzEL
// SIG // MAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
// SIG // EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv
// SIG // c29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9z
// SIG // b2Z0IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UECxMe
// SIG // blNoaWVsZCBUU1MgRVNOOkE0MDAtMDVFMC1EOTQ3MSUw
// SIG // IwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2
// SIG // aWNloIIR6jCCByAwggUIoAMCAQICEzMAAAHWJ2n/ci1W
// SIG // yK4AAQAAAdYwDQYJKoZIhvcNAQELBQAwfDELMAkGA1UE
// SIG // BhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNV
// SIG // BAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBD
// SIG // b3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRp
// SIG // bWUtU3RhbXAgUENBIDIwMTAwHhcNMjMwNTI1MTkxMjM0
// SIG // WhcNMjQwMjAxMTkxMjM0WjCByzELMAkGA1UEBhMCVVMx
// SIG // EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1Jl
// SIG // ZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3Jh
// SIG // dGlvbjElMCMGA1UECxMcTWljcm9zb2Z0IEFtZXJpY2Eg
// SIG // T3BlcmF0aW9uczEnMCUGA1UECxMeblNoaWVsZCBUU1Mg
// SIG // RVNOOkE0MDAtMDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNy
// SIG // b3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIICIjANBgkq
// SIG // hkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAzyzNjpvK+bt3
// SIG // 3GwxDl8nSbW5FuVN+ChWn7QvvEMjaqZTCM0kwtU6BNM3
// SIG // MHkArzyH6WLcjwd47enz0aa74cApLFMPadDn5mc1jw75
// SIG // LeNAVErbvNd0Ja5aEXaZS89saZNvYyDmePqwWymmZAT2
// SIG // eEeC10IZJB53tGP2IfOWajDEWjFpATOp1MFeWg4sF6nR
// SIG // PScpdItWlmGwqs8AUXTewk5QCcayeO6L97n/5RYPYZ1U
// SIG // HKkGIEa0RaQzRTDj9IMM+TY+mtuBmZ3BRBkZisCJi/uS
// SIG // lj51YL2nSUkaemaq2FdxZmwZmbbBdIUpVYy0DvJ8XpRl
// SIG // e076iCEiLL9m0DIFAVRM/MBxclN/Ot4B4/AQmxKSc5u+
// SIG // XyybC9z+upSVDUTewkbHzRGx3V/3eo6KVThcBe6Jpk0I
// SIG // 6VN+wP+2EdMCQ07embF1Po/8GJaPW9trdalLYao0bN9q
// SIG // Bn9k0UwqEFi4SXt3ACGEZZWv4BCpW7gw7Bt/dusuBDBx
// SIG // cU47I63GRGw1sIwd8K6ddQ8oNUCnA8i1LNmpwaJb0MCU
// SIG // zdJjDrlzvLQc9tJ4P/l8PuMPlvTzJL1tX2mIuN+VYykW
// SIG // bB38SD4yM2dMH+BYm5lTyR2fmk8RrFST8cnQob7xgn+H
// SIG // 3vF32GPT+ZW5/UnCnOGnU3eOBgqwZSfyTrKAODrzR2Ol
// SIG // vl3ClXCCBlsCAwEAAaOCAUkwggFFMB0GA1UdDgQWBBRh
// SIG // mlQ2O00AYjAioNvo/80U3GLGTjAfBgNVHSMEGDAWgBSf
// SIG // pxVdAF5iXYP05dJlpxtTNRnpcjBfBgNVHR8EWDBWMFSg
// SIG // UqBQhk5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtp
// SIG // b3BzL2NybC9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIw
// SIG // UENBJTIwMjAxMCgxKS5jcmwwbAYIKwYBBQUHAQEEYDBe
// SIG // MFwGCCsGAQUFBzAChlBodHRwOi8vd3d3Lm1pY3Jvc29m
// SIG // dC5jb20vcGtpb3BzL2NlcnRzL01pY3Jvc29mdCUyMFRp
// SIG // bWUtU3RhbXAlMjBQQ0ElMjAyMDEwKDEpLmNydDAMBgNV
// SIG // HRMBAf8EAjAAMBYGA1UdJQEB/wQMMAoGCCsGAQUFBwMI
// SIG // MA4GA1UdDwEB/wQEAwIHgDANBgkqhkiG9w0BAQsFAAOC
// SIG // AgEA1L/kYzYncCcUmzJNSL0vC38TTPFWlYacUdUpFvhU
// SIG // WOgCpJ9rNzp9vZxhFZWrW5SL9alUypK1MS2DGdM/kQOp
// SIG // pn17ntmO/2AW8zOZFHlIFNstTJm4p+sWnU/Q8xAnhOxO
// SIG // Pt5Ng5mcblfhixWELKpA23vKMu/twUolNvasmQGE/b0Q
// SIG // wCz1AuWcMqD5DXym6o5d1YBU6iLmxEK+ejNGHTFpagqq
// SIG // tMlZZ/Zj24Rx81xzo2kLLq6IRwn+1U/HLe/aaN+BXfF3
// SIG // LKpsoXSgctY3cpJ64pPhd7xJf/dKmqJ+TfCk2aBrThZW
// SIG // iRT52dg6kLW9llpH7gKBlqxkgONzMpe/j2G1LK4vzazL
// SIG // wHfWfifRZarDMF0BcQAe7oyYuIT/AR/I+qpJsuLrpVOU
// SIG // kkGul5BJXGikGEqSXEo5I8kwyDqX+i2QU2hcennqKg2d
// SIG // JVEYYkajvtcqPLlzvPXupIAXgvLdVjeSE6l546HGIA78
// SIG // haabbFA4J0VIiNTP0JfztvfVZLTJCC+9oukHeAQbK492
// SIG // foixJyj/XqVMKLD9Ztzdr/coV0NR4rrCZetyH1yMnwSW
// SIG // lr0A4FNyZOHiGUq/9iiI+KbV7ePegkYh04tNdZHMA6XY
// SIG // 0CwEIgr6I9absoX8FX9huWcAabSF4rzUW2t+CpA+aKph
// SIG // KBdckRUPOIg7H/4Isp/1yE+2GP8wggdxMIIFWaADAgEC
// SIG // AhMzAAAAFcXna54Cm0mZAAAAAAAVMA0GCSqGSIb3DQEB
// SIG // CwUAMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
// SIG // aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
// SIG // ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYDVQQD
// SIG // EylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRo
// SIG // b3JpdHkgMjAxMDAeFw0yMTA5MzAxODIyMjVaFw0zMDA5
// SIG // MzAxODMyMjVaMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQI
// SIG // EwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4w
// SIG // HAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAk
// SIG // BgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAy
// SIG // MDEwMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC
// SIG // AgEA5OGmTOe0ciELeaLL1yR5vQ7VgtP97pwHB9KpbE51
// SIG // yMo1V/YBf2xK4OK9uT4XYDP/XE/HZveVU3Fa4n5KWv64
// SIG // NmeFRiMMtY0Tz3cywBAY6GB9alKDRLemjkZrBxTzxXb1
// SIG // hlDcwUTIcVxRMTegCjhuje3XD9gmU3w5YQJ6xKr9cmmv
// SIG // Haus9ja+NSZk2pg7uhp7M62AW36MEBydUv626GIl3GoP
// SIG // z130/o5Tz9bshVZN7928jaTjkY+yOSxRnOlwaQ3KNi1w
// SIG // jjHINSi947SHJMPgyY9+tVSP3PoFVZhtaDuaRr3tpK56
// SIG // KTesy+uDRedGbsoy1cCGMFxPLOJiss254o2I5JasAUq7
// SIG // vnGpF1tnYN74kpEeHT39IM9zfUGaRnXNxF803RKJ1v2l
// SIG // IH1+/NmeRd+2ci/bfV+AutuqfjbsNkz2K26oElHovwUD
// SIG // o9Fzpk03dJQcNIIP8BDyt0cY7afomXw/TNuvXsLz1dhz
// SIG // PUNOwTM5TI4CvEJoLhDqhFFG4tG9ahhaYQFzymeiXtco
// SIG // dgLiMxhy16cg8ML6EgrXY28MyTZki1ugpoMhXV8wdJGU
// SIG // lNi5UPkLiWHzNgY1GIRH29wb0f2y1BzFa/ZcUlFdEtsl
// SIG // uq9QBXpsxREdcu+N+VLEhReTwDwV2xo3xwgVGD94q0W2
// SIG // 9R6HXtqPnhZyacaue7e3PmriLq0CAwEAAaOCAd0wggHZ
// SIG // MBIGCSsGAQQBgjcVAQQFAgMBAAEwIwYJKwYBBAGCNxUC
// SIG // BBYEFCqnUv5kxJq+gpE8RjUpzxD/LwTuMB0GA1UdDgQW
// SIG // BBSfpxVdAF5iXYP05dJlpxtTNRnpcjBcBgNVHSAEVTBT
// SIG // MFEGDCsGAQQBgjdMg30BATBBMD8GCCsGAQUFBwIBFjNo
// SIG // dHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL0Rv
// SIG // Y3MvUmVwb3NpdG9yeS5odG0wEwYDVR0lBAwwCgYIKwYB
// SIG // BQUHAwgwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEw
// SIG // CwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYD
// SIG // VR0jBBgwFoAU1fZWy4/oolxiaNE9lJBb186aGMQwVgYD
// SIG // VR0fBE8wTTBLoEmgR4ZFaHR0cDovL2NybC5taWNyb3Nv
// SIG // ZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2Vy
// SIG // QXV0XzIwMTAtMDYtMjMuY3JsMFoGCCsGAQUFBwEBBE4w
// SIG // TDBKBggrBgEFBQcwAoY+aHR0cDovL3d3dy5taWNyb3Nv
// SIG // ZnQuY29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXRfMjAx
// SIG // MC0wNi0yMy5jcnQwDQYJKoZIhvcNAQELBQADggIBAJ1V
// SIG // ffwqreEsH2cBMSRb4Z5yS/ypb+pcFLY+TkdkeLEGk5c9
// SIG // MTO1OdfCcTY/2mRsfNB1OW27DzHkwo/7bNGhlBgi7ulm
// SIG // ZzpTTd2YurYeeNg2LpypglYAA7AFvonoaeC6Ce5732pv
// SIG // vinLbtg/SHUB2RjebYIM9W0jVOR4U3UkV7ndn/OOPcbz
// SIG // aN9l9qRWqveVtihVJ9AkvUCgvxm2EhIRXT0n4ECWOKz3
// SIG // +SmJw7wXsFSFQrP8DJ6LGYnn8AtqgcKBGUIZUnWKNsId
// SIG // w2FzLixre24/LAl4FOmRsqlb30mjdAy87JGA0j3mSj5m
// SIG // O0+7hvoyGtmW9I/2kQH2zsZ0/fZMcm8Qq3UwxTSwethQ
// SIG // /gpY3UA8x1RtnWN0SCyxTkctwRQEcb9k+SS+c23Kjgm9
// SIG // swFXSVRk2XPXfx5bRAGOWhmRaw2fpCjcZxkoJLo4S5pu
// SIG // +yFUa2pFEUep8beuyOiJXk+d0tBMdrVXVAmxaQFEfnyh
// SIG // YWxz/gq77EFmPWn9y8FBSX5+k77L+DvktxW/tM4+pTFR
// SIG // hLy/AsGConsXHRWJjXD+57XQKBqJC4822rpM+Zv/Cuk0
// SIG // +CQ1ZyvgDbjmjJnW4SLq8CdCPSWU5nR0W2rRnj7tfqAx
// SIG // M328y+l7vzhwRNGQ8cirOoo6CGJ/2XBjU02N7oJtpQUQ
// SIG // wXEGahC0HVUzWLOhcGbyoYIDTTCCAjUCAQEwgfmhgdGk
// SIG // gc4wgcsxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNo
// SIG // aW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQK
// SIG // ExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJTAjBgNVBAsT
// SIG // HE1pY3Jvc29mdCBBbWVyaWNhIE9wZXJhdGlvbnMxJzAl
// SIG // BgNVBAsTHm5TaGllbGQgVFNTIEVTTjpBNDAwLTA1RTAt
// SIG // RDk0NzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3Rh
// SIG // bXAgU2VydmljZaIjCgEBMAcGBSsOAwIaAxUA+a9w1UaQ
// SIG // BkKPbEy1B3gQvOzaSvqggYMwgYCkfjB8MQswCQYDVQQG
// SIG // EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UE
// SIG // BxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENv
// SIG // cnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGlt
// SIG // ZS1TdGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQsFAAIF
// SIG // AOki3Y0wIhgPMjAyMzEyMTIxMzI0MjlaGA8yMDIzMTIx
// SIG // MzEzMjQyOVowdDA6BgorBgEEAYRZCgQBMSwwKjAKAgUA
// SIG // 6SLdjQIBADAHAgEAAgIN9DAHAgEAAgIT4TAKAgUA6SQv
// SIG // DQIBADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZ
// SIG // CgMCoAowCAIBAAIDB6EgoQowCAIBAAIDAYagMA0GCSqG
// SIG // SIb3DQEBCwUAA4IBAQBbBMUGUpP9nyRKbGXzIls5B9NT
// SIG // T2YgbK0bQkdIhKHB1DPA0rVgEkpTask5SAg0oM0eswNI
// SIG // 2+gEZLqgdyoOza7Z/+sZirNxd1ZBc1CpTyov1kkzhfRs
// SIG // CeWUxJK8gs4MrpzwUjFAYdDERupfr4ZoKuXYEYr5+fF5
// SIG // Db0oW4fSLERA46oOo1aYlAQ5VydUQeMwidhenXgnb2gx
// SIG // hC/UW+xOf0uBDDSDkMgVspj+geyuQJVI8+wKHzYadq0f
// SIG // K8y7mPL/VDOU9Ez9R27rcitRedYXxsiSzK1Osbe0uQDe
// SIG // fAJiVwHUSBuKiNtJi3BAJD4KZoSfHDQgTfxc58gMEIje
// SIG // 0aE+Q7tXMYIEDTCCBAkCAQEwgZMwfDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt
// SIG // U3RhbXAgUENBIDIwMTACEzMAAAHWJ2n/ci1WyK4AAQAA
// SIG // AdYwDQYJYIZIAWUDBAIBBQCgggFKMBoGCSqGSIb3DQEJ
// SIG // AzENBgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQg
// SIG // J/QPt61JfS5pedaF3TTJBDTMSQ4fnbIK2ZG6Fmk7Ugww
// SIG // gfoGCyqGSIb3DQEJEAIvMYHqMIHnMIHkMIG9BCDWy00N
// SIG // V3jTPhAYpzhCTI2XdIzDQ7q/gCvjvD9do+Uk/DCBmDCB
// SIG // gKR+MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNo
// SIG // aW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQK
// SIG // ExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMT
// SIG // HU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMz
// SIG // AAAB1idp/3ItVsiuAAEAAAHWMCIEIMzGruhc2TkrFB5S
// SIG // O5qxlnMeGM7atf5ItT4WyypJtoaDMA0GCSqGSIb3DQEB
// SIG // CwUABIICABoUzcApEVEYnOHcqFDREJhg7ExYDXG3kjvN
// SIG // 6iGRAqfHPBRIx3BABiZdOsxhIgYhQnEmb/FswuEuIAqv
// SIG // gxIkJLTKRvYCLZtG1cJPgDYXBxLu1+4VKPGAExlBDpzI
// SIG // Igu2paAgQZln3Lw8F++jt4vHIFaPMH5QJkkV+959rNqp
// SIG // 3cyBMEQdwONVilVnquBejNUCDF70tUMtpdqDAyyVdYjT
// SIG // ax+hdGTSDh7GYwKxPPuEzQpkrwkjYe/1xhHt3YGvN7zA
// SIG // l9JYhlJwR51V7hihjmFJrQTImpvzNHOFllGDbfohTtmx
// SIG // 0VWyip0DEKThGI1jOsKZfzHIjDCCtOh4sxFVAn5wCp6n
// SIG // PvNlYcGTswPAG/jZvLh8D/rPN+S8EB9pNPc3Hf9AYmoO
// SIG // aFRGggO/KHUt8wgH0ZaPsoQ+k/dQZPo6Vb4rVbdmY0p7
// SIG // lae10VMKeD2Sxm4Y2v1FJG18v1Bf5RaBPHRhBgrM3J+K
// SIG // 9vFaEkXWAVMWgCAFhhFbylzaoMpoaMA2AsdhOfZO29Qh
// SIG // Qwi+ZG5z0TWGD6CFvUHvZE3NTetPVwYchaLuBtWQ3CBg
// SIG // mmD6QoJLuboPfHEuPRrjiCpGU5xcgu+R8Mn9QCP3Zsp4
// SIG // wZtB64bne/Fg0dqkLP7b1ukGhXFZTP2diAxGrEgaYW6V
// SIG // xgaCgZGfcuu1wTupRBHyM9qK2fKxkF8c
// SIG // End signature block
