{
  "apiAzureDependencyTypeName": "Azure API Management",
  "apiAzureDependencyTypeDescription": "모든 환경의 API에 사용할 수 있는 하이브리드 다중 클라우드 관리 플랫폼입니다.",
  "apiAzureDependencyTypeRecomendation": "일관된 API 액세스 환경을 제공하려면 Azure API Management를 사용하는 것이 좋습니다.",
  "appConfigDependencyTypeName": "Azure App Configuration",
  "appConfigDependencyTypeDescription": "Azure에서 중앙에서 관리되는 애플리케이션의 키-값 설정 및 기능 플래그에 쉽게 액세스할 수 있습니다.",
  "appInsightsAzureDependencyTypeName": "Azure Application Insights",
  "appInsightsAzureDependencyTypeDescription": "웹앱 성능 및 사용 현황을 모니터링합니다(Azure에서 실행되는 인스턴스에 대한 연결 사용).",
  "appInsightsDependencyTypeName": "Application Insights",
  "appInsightsDependencyTypeDescription": "웹앱 성능 및 사용량을 모니터링합니다.",
  "appInsightsSdkDependencyTypeName": "Application Insights SDK(로컬)",
  "appInsightsSdkDependencyTypeDescription": "웹앱 성능 및 사용 현황을 모니터링합니다(Azure에서 실행 중인 인스턴스에 연결하지 않음).",
  "appInsightsDependencyTypeRecomendation": "성능 관리 및 웹 사이트 분석을 위해 Application Insights를 사용하는 것이 좋습니다.",
  "appServiceDependencyTypeName": "Azure App Service",
  "appServiceDependencyTypeDescription": "스케일링하기 쉬운 관리형 인프라에 애플리케이션 코드 연결",
  "cosmosdbAzureDependencyTypeName": "Azure Cosmos DB",
  "cosmosdbAzureDependencyTypeDescription": "확장성과 일관성이 뛰어난 지리적 복제 데이터 저장소를 사용하세요.",
  "cosmosdbDependencyTypeName": "Azure Cosmos DB",
  "cosmosdbDependencyTypeDescription": "확장성과 일관성이 뛰어난 지리적 복제 데이터 저장소를 사용하세요.",
  "cosmosdbEmulatorDependencyTypeName": "Azure Cosmos DB 에뮬레이터(로컬)",
  "cosmosdbEmulatorDependencyTypeDescription": "확장성과 일관성이 뛰어난 지리적 복제 데이터 저장소를 사용하세요.",
  "cosmosdbContainerDependencyTypeName": "컨테이너의 Azure Cosmos DB 에뮬레이터(로컬)",
  "cosmosdbContainerDependencyTypeDescription": "확장성과 일관성이 뛰어난 지리적 복제 데이터 저장소를 사용하세요.",
  "connectionSettings": "연결 설정",
  "connectionStringName": "연결 문자열 이름",
  "compute": "컴퓨팅",
  "computeDependencyTypeName": "Azure Compute 서비스",
  "computeDependencyTypeDescription": "Azure Compute 서비스(AppService, 함수 등)",
  "container": "컨테이너",
  "database": "데이터베이스",
  "dotnetMsIdentity": "dotnet msidentity 도구",
  "dotnetMsIdentityToolDescription": "Microsoft ID 플랫폼을 사용하도록 ASP.NET 프로젝트를 구성하는 데 사용할 수 있는 .NET 도구입니다.",
  "dockerDesktop": "Docker Desktop",
  "dockerDesktopDescription": "로컬 컴퓨터에서 컨테이너를 실행하려면 Docker Desktop을 설치해야 합니다.",
  "emulator": "에뮬레이터",
  "environmentVariable": "환경 변수",
  "function": "함수",
  "functionDependencyTypeName": "Azure 함수",
  "functionDependencyTypeDescription": "동적으로 스케일링되고 주문형으로 코드를 실행하는 서버리스 컴퓨팅에 애플리케이션 코드 연결",
  "identityDependencyTypeName": "Microsoft ID 플랫폼",
  "identityDependencyTypeDescription": "Microsoft Entra ID 또는 Azure AD B2C를 사용하여 애플리케이션에 대한 인증",
  "identityDependencyTypeRecomendation": "Microsoft ID 플랫폼(Microsoft Entra ID, Azure AD B2C 및 개인 Microsoft 계정)을 사용하여 사용자를 인증하는 응용 프로그램의 경우입니다.",
  "keyVaultUrl": "KeyVault URL",
  "local": "로컬",
  "mongodbDependencyTypeName": "MongoDB",
  "mongodbDependencyTypeDescription": "MongoDB 문서 데이터베이스는 고가용성과 손쉬운 확장성을 제공합니다.",
  "mongodbContainerDependencyTypeName": "컨테이너의 MongoDB(로컬)",
  "mongodbContainerDependencyTypeDescription": "MongoDB 문서 데이터베이스는 고가용성과 손쉬운 확장성을 제공합니다.",
  "monitor": "모니터",
  "mssqlAzureDependencyTypeName": "Azure SQL Database",
  "mssqlAzureDependencyTypeDescription": "광범위한 SQL Server 엔진 호환성을 제공하는 확장성이 뛰어난 인텔리전트 클라우드 데이터베이스 서비스입니다.",
  "mssqlContainerDependencyTypeName": "컨테이너의 SQL Server 데이터베이스(로컬)",
  "mssqlContainerDependencyTypeDescription": "가장 광범위한 SQL Server 엔진 호환성을 제공하는 컨테이너에 호스트된 데이터베이스 서비스입니다.",
  "mssqlDependencyTypeName": "SQL Server 데이터베이스",
  "mssqlDependencyTypeDescription": "가장 광범위한 SQL Server 엔진 호환성을 제공하는, 온-프레미스에 호스트된 데이터베이스 서비스입니다.",
  "mssqlLocalDependencyTypeName": "SQL Server Express LocalDB(로컬)",
  "mssqlLocalDependencyTypeDescription": "광범위한 SQL Server 엔진 호환성을 제공하는 로컬 데이터베이스 서비스입니다.",
  "mssqlOnpremDependencyTypeName": "SQL Server 데이터베이스",
  "mssqlOnpremDependencyTypeDescription": "온-프레미스 SQL Server 데이터베이스",
  "postgresqlDependencyTypeName": "PostgreSQL",
  "postgresqlDependencyTypeDescription": "PostgreSQL 개체 관계형 데이터베이스 시스템은 안정성 및 데이터 무결성을 제공합니다.",
  "postgresqlContainerDependencyTypeName": "컨테이너의 PostgreSQL(로컬)",
  "postgresqlContainerDependencyTypeDescription": "PostgreSQL 개체 관계형 데이터베이스 시스템은 안정성 및 데이터 무결성을 제공합니다.",
  "powerPlatformDependencyTypeName": "Microsoft Power Platform",
  "powerPlatformDependencyTypeDescription": "웹 API에 연결된 Microsoft Power Platform으로 애플리케이션 또는 워크플로 자동화를 빌드하세요.",
  "redisAzureDependencyTypeName": "Azure Cache for Redis",
  "redisAzureDependencyTypeDescription": "대기 시간이 짧고 처리량이 높은 다양한 Redis 엔진 기능을 활용하여 사용자 로드가 증가하는 상황에서도 뛰어난 애플리케이션 응답성을 유지하세요.",
  "redisDependencyTypeName": "Redis Cache",
  "redisDependencyTypeDescription": "대기 시간이 짧고 처리량이 높은 다양한 Redis 엔진 기능을 활용하여 사용자 로드가 증가하는 상황에서도 뛰어난 애플리케이션 응답성을 유지하세요.",
  "redisContainerDependencyTypeName": "컨테이너의 Redis Cache(로컬)",
  "redisContainerDependencyTypeDescription": "대기 시간이 짧고 처리량이 높은 다양한 Redis 엔진 기능을 활용하여 사용자 로드가 증가하는 상황에서도 뛰어난 애플리케이션 응답성을 유지하세요.",
  "rabbitmqDependencyTypeName": "RabbitMQ",
  "rabbitmqDependencyTypeDescription": "RabbitMQ는 오픈 소스 다중 프로토콜 메시징 브로커입니다.",
  "rabbitmqContainerDependencyTypeName": "컨테이너의 RabbitMQ(로컬)",
  "rabbitmqContainerDependencyTypeDescription": "RabbitMQ는 오픈 소스 다중 프로토콜 메시징 브로커입니다.",
  "secrets": "비밀",
  "secretsDependencyTypeName": "비밀",
  "secretsDependencyTypeDescription": "클라우드 앱 및 서비스에서 사용되는 암호화 키 및 기타 비밀을 안전하게 보호합니다.",
  "secretsKeyVaultDependencyTypeName": "Azure Key Vault",
  "secretsKeyVaultDependencyTypeDescription": "클라우드 앱 및 서비스에서 사용되는 암호화 키 및 기타 비밀을 안전하게 보호합니다.",
  "secretsUserDependencyTypeName": "Secrets.json(로컬)",
  "secretsUserDependencyTypeDescription": "클라우드 앱 및 서비스에서 사용되는 암호화 키 및 기타 비밀을 안전하게 보호합니다.",
  "signalRAzureDependencyTypeName": "Azure SignalR Service",
  "signalRAzureDependencyTypeDescription": "웹 애플리케이션과의 실시간 통신을 쉽게 사용하도록 설정할 수 있습니다.",
  "signalRDependencyTypeName": "SignalR",
  "signalRDependencyTypeDescription": "웹 애플리케이션과의 실시간 통신을 쉽게 사용하도록 설정할 수 있습니다.",
  "signalRDependencyTypeRecomendation": "애플리케이션에서 SignalR을 사용하고 있습니다. 스케일링해야 하는 환경의 경우 Azure SignalR Service에 대한 종속성을 추가하는 것이 좋습니다.",
  "sqliteDependencyTypeName": "SQLite(로컬)",
  "sqliteDependencyTypeDescription": "SQLite는 자체 포함, 서버리스, 제로 구성, 트랜잭션 SQL 데이터베이스 엔진을 구현하는 In Process 라이브러리입니다.",
  "storageAzureDependencyTypeName": "Azure Storage",
  "storageAzureDependencyTypeDescription": "보안, 지속성 및 확장성이 뛰어난 고가용성 중복 클라우드 스토리지입니다. Azure Blob, File, Queue 및 Table service를 포함합니다.",
  "storageContainerDependencyTypeName": "컨테이너의 Storage Azurite(로컬)",
  "storageContainerDependencyTypeDescription": "Azure Blob 및 큐 저장소 애플리케이션을 테스트하기 위한 로컬 환경을 제공하는 오픈 소스 에뮬레이터가 포함된 컨테이너입니다.",
  "storageDependencyTypeName": "스토리지",
  "storageDependencyTypeDescription": "보안, 지속성 및 확장성이 뛰어난 고가용성 중복 클라우드 스토리지입니다. Azure Blob, File, Queue 및 Table service를 포함합니다.",
  "storageEmulatorDependencyTypeName": "Storage Azurite 에뮬레이터(로컬)",
  "storageEmulatorDependencyTypeDescription": "Azure Blob 및 큐 저장소 애플리케이션을 테스트하기 위한 로컬 환경을 제공하는 Node.js 기반 오픈 소스 에뮬레이터입니다.",
  "storage": "스토리지",
  "store": "저장소",
  "unknownDependencyTypeName": "알 수 없음",
  "unknownDependencyTypeDescription": "",
  "vsAzureStorageEmulatorComponent": "Azurite 에뮬레이터",
  "vsAzureStorageEmulatorComponentDescription": "Azure 스토리지 엔드포인트에 대한 개발 및 테스트를 위한 도구입니다.",
  "vsSqlLocalDbComponent": "SQL Server Express 2016 LocalDB",
  "vsSqlLocalDbComponentDescription": "LocalDB는 애플리케이션 개발용으로 대상이 지정된 SQL Server Express 데이터베이스 엔진의 간단 버전입니다.",
  "vsWebWorkload": "ASP.NET 및 웹 개발",
  "vsWebWorkloadDescription": "Docker 지원이 포함된 ASP.NET Core, ASP.NET, HTML/JavaScript 및 컨테이너를 사용하여 웹 애플리케이션을 빌드합니다.",
  "webApp": "웹앱"
}