{
  "apiAzureDependencyTypeName": "Azure API Management",
  "apiAzureDependencyTypeDescription": "すべての環境での API 用のハイブリッドなマルチクラウド管理プラットフォームです。",
  "apiAzureDependencyTypeRecomendation": "API にアクセスするための一貫性のあるエクスペリエンスを提供するために、Azure API Management を使用することをお勧めします。",
  "appConfigDependencyTypeName": "Azure App Configuration",
  "appConfigDependencyTypeDescription": "Azure で一元管理されているアプリケーションのキーと値の設定と機能フラグに簡単にアクセスできます。",
  "appInsightsAzureDependencyTypeName": "Azure Application Insights",
  "appInsightsAzureDependencyTypeDescription": "Web アプリのパフォーマンスと使用状況を監視します (Azure で実行されているインスタンスへの接続を使用)。",
  "appInsightsDependencyTypeName": "Application Insights",
  "appInsightsDependencyTypeDescription": "Web アプリのパフォーマンスと利用状況を監視します。",
  "appInsightsSdkDependencyTypeName": "Application Insights SDK (ローカル)",
  "appInsightsSdkDependencyTypeDescription": "Web アプリのパフォーマンスと使用状況を監視します (Azure で実行されているインスタンスへの接続を使用しない)。",
  "appInsightsDependencyTypeRecomendation": "パフォーマンス管理と Web サイトの分析には、Application Insights を使用することをお勧めします。",
  "appServiceDependencyTypeName": "Azure App Service",
  "appServiceDependencyTypeDescription": "簡単にスケーリングできるマネージド インフラストラクチャにアプリケーション コードを接続します",
  "cosmosdbAzureDependencyTypeName": "Azure Cosmos DB",
  "cosmosdbAzureDependencyTypeDescription": "拡張性が高く、geo レプリケーションが有効な一貫性のあるデータ ストアを使用します。",
  "cosmosdbDependencyTypeName": "Azure Cosmos DB",
  "cosmosdbDependencyTypeDescription": "拡張性が高く、geo レプリケーションが有効な一貫性のあるデータ ストアを使用します。",
  "cosmosdbEmulatorDependencyTypeName": "Azure Cosmos DB エミュレーター (ローカル)",
  "cosmosdbEmulatorDependencyTypeDescription": "拡張性が高く、geo レプリケーションが有効な一貫性のあるデータ ストアを使用します。",
  "cosmosdbContainerDependencyTypeName": "コンテナー上の Azure Cosmos DB エミュレーター (ローカル)",
  "cosmosdbContainerDependencyTypeDescription": "拡張性が高く、geo レプリケーションが有効な一貫性のあるデータ ストアを使用します。",
  "connectionSettings": "接続の設定",
  "connectionStringName": "接続文字列名",
  "compute": "コンピューティング",
  "computeDependencyTypeName": "Azure コンピューティング サービス",
  "computeDependencyTypeDescription": "Azure コンピューティング サービス (App Service、Function など) です",
  "container": "コンテナー",
  "database": "データベース",
  "dotnetMsIdentity": "dotnet msidentity ツール",
  "dotnetMsIdentityToolDescription": "Microsoft ID プラットフォームを使用する ASP.NET プロジェクトを構成するために使用できる .NET ツールです。",
  "dockerDesktop": "Docker Desktop",
  "dockerDesktopDescription": "ローカル コンピューター上でコンテナーを実行するには、Docker Desktop をインストールする必要があります。",
  "emulator": "エミュレーター",
  "environmentVariable": "環境変数",
  "function": "関数",
  "functionDependencyTypeName": "Azure 関数",
  "functionDependencyTypeDescription": "動的にスケーリングされ、コードをオンデマンドで実行するサーバーレス コンピューティングにアプリケーション コードを接続します",
  "identityDependencyTypeName": "Microsoft ID プラットフォーム",
  "identityDependencyTypeDescription": "Microsoft Entra ID または Azure AD B2C を使用したアプリケーションの認証。",
  "identityDependencyTypeRecomendation": "Microsoft ID プラットフォーム (Microsoft Entra ID、Azure AD B2C、個人用 Microsoft アカウント) を使用してユーザーを認証するアプリケーションの場合。",
  "keyVaultUrl": "KeyVault URL",
  "local": "ローカル",
  "mongodbDependencyTypeName": "MongoDB",
  "mongodbDependencyTypeDescription": "MongoDB ドキュメント データベースでは、高可用性と容易なスケーラビリティが提供されます。",
  "mongodbContainerDependencyTypeName": "コンテナー上の MongoDB (ローカル)",
  "mongodbContainerDependencyTypeDescription": "MongoDB ドキュメント データベースでは、高可用性と容易なスケーラビリティが提供されます。",
  "monitor": "モニター",
  "mssqlAzureDependencyTypeName": "Azure SQL Database",
  "mssqlAzureDependencyTypeDescription": "SQL Server エンジンの最も幅広い互換性を提供するインテリジェントでスケーラブルなクラウド データベース サービス。",
  "mssqlContainerDependencyTypeName": "コンテナー上の SQL Server データベース (ローカル)",
  "mssqlContainerDependencyTypeDescription": "SQL Server エンジンの最も幅広い互換性を提供するコンテナーにホストされたデータベース サービス。",
  "mssqlDependencyTypeName": "SQL Server データベース",
  "mssqlDependencyTypeDescription": "SQL Server エンジンの最も幅広い互換性を提供するオンプレミスにホストされたデータベース サービス。",
  "mssqlLocalDependencyTypeName": "SQL Server Express LocalDB (ローカル)",
  "mssqlLocalDependencyTypeDescription": "SQL Server エンジンの最も幅広い互換性を提供するローカル データベース サービス。",
  "mssqlOnpremDependencyTypeName": "SQL Server データベース",
  "mssqlOnpremDependencyTypeDescription": "オンプレミス SQL Server データベース",
  "postgresqlDependencyTypeName": "PostgreSQL",
  "postgresqlDependencyTypeDescription": "PostgreSQL オブジェクト リレーショナル データベース システムでは、信頼性とデータの整合性が提供されます。",
  "postgresqlContainerDependencyTypeName": "コンテナー上の PostgreSQL (ローカル)",
  "postgresqlContainerDependencyTypeDescription": "PostgreSQL オブジェクト リレーショナル データベース システムでは、信頼性とデータの整合性が提供されます。",
  "powerPlatformDependencyTypeName": "Microsoft Power Platform",
  "powerPlatformDependencyTypeDescription": "Web API に接続された Microsoft Power Platform を使用して、アプリケーションまたはワークフローの自動化を構築します。",
  "redisAzureDependencyTypeName": "Azure Cache for Redis",
  "redisAzureDependencyTypeDescription": "Redis エンジンの低遅延で高スループットな機能を利用することで、ユーザー負荷が増加したときでもアプリケーションの応答性を維持できます。",
  "redisDependencyTypeName": "Redis Cache",
  "redisDependencyTypeDescription": "Redis エンジンの低遅延で高スループットな機能を利用することで、ユーザー負荷が増加したときでもアプリケーションの応答性を維持できます。",
  "redisContainerDependencyTypeName": "コンテナー上の Redis Cache (ローカル)",
  "redisContainerDependencyTypeDescription": "Redis エンジンの低遅延で高スループットな機能を利用することで、ユーザー負荷が増加したときでもアプリケーションの応答性を維持できます。",
  "rabbitmqDependencyTypeName": "RabbitMQ",
  "rabbitmqDependencyTypeDescription": "RabbitMQ は、オープン ソースのマルチプロトコル メッセージング ブローカーです。",
  "rabbitmqContainerDependencyTypeName": "コンテナー上の RabbitMQ (ローカル)",
  "rabbitmqContainerDependencyTypeDescription": "RabbitMQ は、オープン ソースのマルチプロトコル メッセージング ブローカーです。",
  "secrets": "シークレット",
  "secretsDependencyTypeName": "シークレット",
  "secretsDependencyTypeDescription": "クラウドのアプリとサービスで使用する暗号化キーと他のシークレットを保護します。",
  "secretsKeyVaultDependencyTypeName": "Azure Key Vault",
  "secretsKeyVaultDependencyTypeDescription": "クラウドのアプリとサービスで使用する暗号化キーと他のシークレットを保護します。",
  "secretsUserDependencyTypeName": "Secrets.json (ローカル)",
  "secretsUserDependencyTypeDescription": "クラウドのアプリとサービスで使用する暗号化キーと他のシークレットを保護します。",
  "signalRAzureDependencyTypeName": "Azure SignalR Service",
  "signalRAzureDependencyTypeDescription": "Web アプリケーションへのリアルタイム コミュニケーションを簡単に有効にします。",
  "signalRDependencyTypeName": "SignalR",
  "signalRDependencyTypeDescription": "Web アプリケーションへのリアルタイム コミュニケーションを簡単に有効にします。",
  "signalRDependencyTypeRecomendation": "アプリケーションで SignalR を使用しています。スケーリングが必要な環境では、Azure SignalR Service に依存関係を追加することを強くお勧めします。",
  "sqliteDependencyTypeName": "SQLite (ローカル)",
  "sqliteDependencyTypeDescription": "SQLite は、自己完結型、サーバーレス、ゼロ構成、トランザクション SQL データベース エンジンを実装するインプロセス ライブラリです。",
  "storageAzureDependencyTypeName": "Azure Storage",
  "storageAzureDependencyTypeDescription": "高可用性を持ち、セキュリティで保護された、永続的でスケーラブルな冗長クラウド ストレージ。Azure BLOB、ファイル、キュー、テーブル サービスが含まれます。",
  "storageContainerDependencyTypeName": "コンテナー上のストレージ Azurite (ローカル)",
  "storageContainerDependencyTypeDescription": "Azure BLOB およびキュー ストレージ アプリケーションをテストするためのローカル環境を提供するオープンソース エミュレーター付きコンテナーです。",
  "storageDependencyTypeName": "ストレージ",
  "storageDependencyTypeDescription": "高可用性を持ち、セキュリティで保護された、永続的でスケーラブルな冗長クラウド ストレージ。Azure BLOB、ファイル、キュー、テーブル サービスが含まれます。",
  "storageEmulatorDependencyTypeName": "ストレージ Azurite エミュレーター (ローカル)",
  "storageEmulatorDependencyTypeDescription": "Azure BLOB およびキュー ストレージ アプリケーションをテストするためのローカル環境を提供する Node.js ベースのオープンソース エミュレーターです。",
  "storage": "ストレージ",
  "store": "ストア",
  "unknownDependencyTypeName": "不明",
  "unknownDependencyTypeDescription": "",
  "vsAzureStorageEmulatorComponent": "Azurite エミュレーター",
  "vsAzureStorageEmulatorComponentDescription": "Azure Storage エンドポイントに対する開発およびテストのためのツール。",
  "vsSqlLocalDbComponent": "SQL Server Express 2016 LocalDB",
  "vsSqlLocalDbComponentDescription": "LocalDB は、アプリケーション開発を対象にした、SQL Server Express データベース エンジンの軽量版です。",
  "vsWebWorkload": "ASP.NET と Web 開発",
  "vsWebWorkloadDescription": "ASP.NET Core、ASP.NET、HTML/JavaScript、コンテナー (Docker サポートなど) を使用して、Web アプリケーションをビルドします。",
  "webApp": "Web アプリ"
}