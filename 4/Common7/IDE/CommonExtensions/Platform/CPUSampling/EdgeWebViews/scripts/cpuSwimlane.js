define("cpuSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return s={851:(e,t,i)=>{var s,a;s=[i,t,i(226),i(560),i(560),i(560),i(117),i(117),i(117),i(117)],a=function(e,t,i,s,a,r,n,o,h,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuCountersDataSeries=void 0;class u{constructor(e,t,i,s,a,r,d){this._logger=l.getLogger("CpuCountersDataSeries"),this._cachedPoints=[],this._drawFill=!1,this._droppedRequests=0,this._currentTimespan=new h.JsonTimespan(h.BigNumber.zero,h.BigNumber.zero),this._seriesMin=0,this._seriesMax=0,this._newDataEvent=new n.AggregatedEvent,this._samples=250,this._currentTimespan=t,this._unitConverter=i,this._colorScheme=s,this._drawFill=a,this._title=r,this._tooltip=d,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*u.PointRadiusInPixels+"px",this._marker.style.height=2*u.PointRadiusInPixels+"px",this._dataWarehouseRequestHandle=o.loadDataWarehouse().then((t=>{const i={customDomain:{Task:"GetCounter",CounterId:e}};return t.getFilteredData(i,u.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequests=0,this.requestUpdate()}))}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get cachedPoints(){return this._cachedPoints}get minValue(){return this._seriesMin}get maxValue(){return this._seriesMax}get marker(){return this._marker}get title(){return this._title}get tooltip(){return this._tooltip}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){const t=this._cachedPoints.length;(this._currentTimespan.contains(e)||0===t||t>0&&this._currentTimespan.end.greater(this._cachedPoints[t-1].Timestamp))&&this.requestUpdate()}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._cachedPoints.length)return null;let s={Timestamp:e,Value:0};const n=(e,t)=>t.Timestamp.greater(e.Timestamp);switch(t){case a.PointToFind.LessThanOrEqual:{const e=r.Utilities.findLessThan(this._cachedPoints,s,n);s=this._cachedPoints[e];break}case a.PointToFind.GreaterThanOrEqual:{const e=r.Utilities.findGreaterThan(this._cachedPoints,s,n);s=this._cachedPoints[e];break}case a.PointToFind.Nearest:default:{const t=r.Utilities.findLessThan(this._cachedPoints,s,n),i=Math.min(t+1,this._cachedPoints.length-1),a=h.BigNumber.subtract(e,this._cachedPoints[t].Timestamp),o=h.BigNumber.subtract(this._cachedPoints[i].Timestamp,e),l=a.greater(o)?i:t;s=this._cachedPoints[l];break}}return{timestamp:s.Timestamp,tooltip:i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabel",this._unitConverter.formatNumber(s.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0)),value:s.Value,color:this._colorScheme}}draw(e,t){if(0===this._cachedPoints.length||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0)return;t.chartRect.width!==this._samples&&(this._samples=t.chartRect.width,this.requestUpdate());const i=e=>t.chartRect.height-r.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),s=e=>r.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const a=s(this._cachedPoints[0].Timestamp);e.beginPath(),e.moveTo(a,i(this._cachedPoints[0].Value)),this._cachedPoints.forEach((t=>e.lineTo(s(t.Timestamp),i(t.Value)))),e.stroke(),this._drawFill&&(e.lineTo(s(this._cachedPoints[this._cachedPoints.length-1].Timestamp),i(t.gridY.min)),e.lineTo(a,t.chartRect.height),e.closePath(),e.fill());const n=h.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);h.BigNumber.convertFromNumber(u.CounterFrequencyPerPixel).greater(n)&&this._cachedPoints.forEach((t=>{e.beginPath(),e.arc(s(t.Timestamp),i(t.Value),u.PointRadiusInPixels,0,2*Math.PI),e.fill()})),e.restore()}requestUpdate(){if(this._dataWarehouseRequestHandle)return void this._droppedRequests++;if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),i=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=h.BigNumber.add(i,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),r={type:"SamplePoints",begin:i.jsonValue,end:a.jsonValue,samples:Math.max(this._samples,2)};this._dataWarehouseRequestHandle=this._countersResult.getResult(r).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequests>0&&(this._logger.info(`Dropped ${this._droppedRequests} requests to the DataWarehouse`),window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutRollingGraph),this._droppedRequests=0)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}cachePoints(e){this._cachedPoints=e.p.map((e=>{const t=new h.BigNumber(e.t.h,e.t.l);return this._seriesMin=Math.min(this._seriesMin,e.v),this._seriesMax=Math.max(this._seriesMax,e.v),{Timestamp:t,Value:e.v,ToolTip:e.tt}})),this._newDataEvent.invokeEvent(this)}}t.CpuCountersDataSeries=u,u.PointRadiusInPixels=2.5,u.CounterFrequencyPerPixel=1e8/(2*u.PointRadiusInPixels+4)}.apply(t,s),void 0===a||(e.exports=a)},68:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(851),i(67),i(479)],a=function(e,t,i,s,a,r,n,o,h,l,u,d,c,p){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuSwimlaneFactory=void 0,t.CpuSwimlaneFactory=function(e,t,g,m,_,T){const w=new u.SwimlaneConfiguration(e,_,m);w.header.isBodyExpanded=t;const S=w.graph,P=new i.LocalizedUnitConverter(S.jsonConfig.Units,S.resources),v=[],R=new d.CpuCountersDataSeries(S.jsonConfig.Series[0].DataSource.CounterId,w.graph.timeRange,new i.LocalizedUnitConverter(S.jsonConfig.Units,S.resources),new a.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)"),!0,w.graph.resources[S.jsonConfig.Series[0].Legend],w.graph.resources[S.jsonConfig.Series[0].LegendTooltip]);v.push(R);const b=new c.EnabledDataSeries(R,S.jsonConfig.EnabledAtStart,w.graph.resources.CpuGraphProfilingEnabled);if(v.push(b),!S.jsonConfig.IsCollecting&&!S.jsonConfig.IsPerfDebugger){const e=new p.HighlightDataSeries(R,w.graph.timeRange,w.graph.resources.CpuGraphCurrentFunction);v.push(e)}w.graph.jsonConfig.Series=[];const C=new n.MultiSeriesGraph(w.graph,v);C.container.setAttribute("aria-label",e.Title);const D=new o.Scale(w.graph.scale,s.ScaleType.Left,P),E=new o.Scale(w.graph.scale,s.ScaleType.Right,P);C.scaleChangedEvent.addEventListener(D.onScaleChanged.bind(D)),C.scaleChangedEvent.addEventListener(E.onScaleChanged.bind(E)),w.header.unit=w.graph.unit;const N=new l.SwimlaneBase(w.header,w.graph.height,_,T);return C.scaleChangedEvent.addEventListener(N.onScaleChanged.bind(N)),g?N.addMainRegionControl(new h.SelectionOverlay(C,_,T,w.id)):N.addMainRegionControl(C),N.addMainRegionControl(new r.GridLineRenderer(_)),N.addLeftRegionControl(D),N.addRightRegionControl(E),N}}.apply(t,s),void 0===a||(e.exports=a)},319:(e,t,i)=>{var s,a;s=[i,t,i(226),i(117)],a=function(e,t,i,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CpuSwimlaneMarshaler=void 0;let a=null;t.CpuSwimlaneMarshaler=class{constructor(){null===a&&(a=i.JSONMarshaler.attachToMarshaledObject("Microsoft.DiagnosticsHub.Tools.CpuSampling.CpuToolSwimlaneMarshaler",{},!0)),this._graphHighlightEvent=new s.ObservableEvent(a,"GraphHighlightChangedEvent")}isToolSupported(){return a._call("isToolSupported")}updateGraphHighlight(e,t){return a._call("raiseGraphHighlightChangedEvent",{rowId:e,rowType:t})}clearGraphHighlight(){return a._call("clearGraphHighlight")}get graphHighlightEvent(){return this._graphHighlightEvent}graphHighlightingFeatureEnabled(){return a._call("graphHighlightingFeatureEnabled")}getCurrentResultStatus(){return a._call("getCurrentResultStatus")}}}.apply(t,s),void 0===a||(e.exports=a)},67:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(319)],a=function(e,t,i,s,a,r,n,o,h,l,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EnabledDataSeries=void 0;class d{constructor(e,t,i){this._logger=l.getLogger("EnabledDataSeries"),this._enabledAtStart=!1,this._toggleEvents=[],this._droppedRequest=!1,this._newDataEvent=new n.AggregatedEvent,this._colorScheme=new a.ChartColorScheme("#92AB00","#AECD00"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*d.PointRadiusInPixels+"px",this._marker.style.height=2*d.PointRadiusInPixels+"px",this._cpuDataSeries=e;const s=new u.CpuSwimlaneMarshaler;this._dataWarehouseRequestHandle=s.isToolSupported().then((e=>e?(this._enabledAtStart=t,o.loadDataWarehouse()):Promise.resolve(null))).then((e=>{const t={customDomain:{CounterId:d.counterId}};return e.getFilteredData(t,d.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get counterId(){return"CpuTool.Counters.CollectionEnabled"}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._cpuDataSeries.cachedPoints.length||0===this._toggleEvents.length&&!this._enabledAtStart)return null;let i={Timestamp:e,Value:0};const a=(e,t)=>t.Timestamp.greater(e.Timestamp);let n=!0;if(0!==this._toggleEvents.length){const t=r.Utilities.findLessThan(this._toggleEvents,i,a);this._toggleEvents[t].Timestamp.greater(e)?n=this._enabledAtStart:0===this._toggleEvents[t].Value&&(n=!1)}if(!n)return null;const o=this.getPointIndex(this._cpuDataSeries.cachedPoints,i.Timestamp,0,this._cpuDataSeries.cachedPoints.length-1,t);return i=this._cpuDataSeries.cachedPoints[o],{timestamp:i.Timestamp,tooltip:this._tooltip,value:i.Value,color:this._colorScheme}}onDataUpdate(e){this.requestUpdate()}draw(e,t){if(0===this._cpuDataSeries.cachedPoints.length||0===t.chartRect.width)return;let i=0,a=this._cpuDataSeries.cachedPoints.length-1,r=this._enabledAtStart;e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor,this._toggleEvents.forEach((n=>{n.Value>.5?(i=this.getPointIndex(this._cpuDataSeries.cachedPoints,n.Timestamp,0,this._cpuDataSeries.cachedPoints.length-1,s.PointToFind.Nearest),r=!0):(a=this.getPointIndex(this._cpuDataSeries.cachedPoints,n.Timestamp,0,this._cpuDataSeries.cachedPoints.length-1,s.PointToFind.Nearest),r=!1,this.drawBetween(e,t,i,a))})),r&&(a=this._cpuDataSeries.cachedPoints.length-1,this.drawBetween(e,t,i,a)),e.restore()}drawBetween(e,t,i,s){const a=e=>t.chartRect.height-r.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),n=e=>r.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.beginPath();for(let t=i;t<=s;++t)e.lineTo(n(this._cpuDataSeries.cachedPoints[t].Timestamp),a(this._cpuDataSeries.cachedPoints[t].Value));e.stroke(),e.lineTo(n(this._cpuDataSeries.cachedPoints[s].Timestamp),a(t.gridY.min)),e.lineTo(n(this._cpuDataSeries.cachedPoints[i].Timestamp),t.chartRect.height),e.closePath(),e.fill();const o=h.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);if(h.BigNumber.convertFromNumber(d.CounterFrequencyPerPixel).greater(o))for(let t=i;t<=s;++t)e.beginPath(),e.arc(n(this._cpuDataSeries.cachedPoints[t].Timestamp),a(this._cpuDataSeries.cachedPoints[t].Value),d.PointRadiusInPixels,0,2*Math.PI),e.fill()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=this._countersResult.getResult(null).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutRollingGraph),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}cachePoints(e){e.p.forEach((e=>{this._toggleEvents.push({Timestamp:new h.BigNumber(e.t.h,e.t.l),Value:e.v,ToolTip:e.tt})})),this._newDataEvent.invokeEvent(this)}getPointIndex(e,t,i,a,n){const o=(e,t)=>t.Timestamp.greater(e.Timestamp),l={Timestamp:t,Value:0};switch(n){case s.PointToFind.LessThanOrEqual:return r.Utilities.findLessThan(e,l,o,i,a);case s.PointToFind.GreaterThanOrEqual:return r.Utilities.findGreaterThan(e,l,o,i,a);case s.PointToFind.Nearest:default:{const i=r.Utilities.findLessThan(e,l,o),s=Math.min(i+1,e.length-1),a=h.BigNumber.subtract(t,e[i].Timestamp),n=h.BigNumber.subtract(e[s].Timestamp,t);return a.greater(n)?s:i}}}}t.EnabledDataSeries=d,d.PointRadiusInPixels=2.5,d.CounterFrequencyPerPixel=1e8/(2*d.PointRadiusInPixels+4)}.apply(t,s),void 0===a||(e.exports=a)},479:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(319),i(886)],a=function(e,t,i,s,a,r,n,o,h,l,u,d){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HighlightDataSeries=void 0;class c{constructor(e,t,i){this._logger=l.getLogger("HighlightDataSeries"),this._droppedRequest=!1,this._newDataEvent=new n.AggregatedEvent,this._onHighlightChangedHandler=e=>this.onHighlightChanged(e),this._samples=250,this._cpuSwimlaneMarshaler=new u.CpuSwimlaneMarshaler,this._rowId=-1,this._rowType=d.RowType.Unknown,this._timestamps=[],this._colorScheme=new a.ChartColorScheme("#903F8B","#903F8B"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width="1px",this._marker.style.height="100%",this._cpuDataSeries=e,this._currentTimespan=t,this._cpuSwimlaneMarshaler.graphHighlightEvent.addEventListener(this._onHighlightChangedHandler),this._dataWarehouseRequestHandle=this._cpuSwimlaneMarshaler.graphHighlightingFeatureEnabled().then((e=>(this._graphHighlightingFeatureEnabled=e,this._graphHighlightingFeatureEnabled?o.loadDataWarehouse():Promise.resolve(null)))).then((e=>{if(e){this._dataWarehouse=e;const t=this._droppedRequest;this._droppedRequest=!1,this._dataWarehouseRequestHandle=null,t&&this.requestUpdate()}}))}onHighlightChanged(e){null===e?(this._rowId=-1,this._rowType=d.RowType.Unknown):(this._rowId=e.rowId,this._rowType=e.rowType),this.requestUpdate()}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._cpuSwimlaneMarshaler.graphHighlightEvent.removeEventListener(this._onHighlightChangedHandler),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){this.requestUpdate()}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._cpuDataSeries.cachedPoints.length||0===this._timestamps.length)return null;const i=this.getOccurrencePointIndex(this._timestamps,e,0,this._timestamps.length-1,t);return{timestamp:this._timestamps[i],tooltip:this._tooltip,value:Number.NaN,color:this._colorScheme}}draw(e,t){if(0===this._cpuDataSeries.cachedPoints.length||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0||0===this._timestamps.length)return;2*t.chartRect.width!==this._samples&&(this._samples=2*t.chartRect.width,this.requestUpdate()),e.save(),e.lineWidth=1,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=e=>r.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),a=e=>t.chartRect.height-r.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);this._timestamps.forEach((r=>{const n=i(r),o=this._cpuDataSeries.getPointAtTimestamp(r,s.PointToFind.LessThanOrEqual),h=this._cpuDataSeries.getPointAtTimestamp(r,s.PointToFind.GreaterThanOrEqual);if(!o||!h)return;const l=i(o.timestamp),u=a(o.value),d=i(h.timestamp),c={x:n,y:u+(a(h.value)-u)/(d-l)*(n-l)};e.beginPath(),e.moveTo(c.x+.5,a(t.gridY.min)),e.lineTo(c.x+.5,c.y),e.stroke(),e.closePath()})),e.restore()}requestUpdate(){if(!this._graphHighlightingFeatureEnabled)return;if(this._dataWarehouseRequestHandle)return void(this._droppedRequest=!0);if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),s=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=h.BigNumber.add(s,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),r=this._rowId,n=this._rowType;this._dataWarehouseRequestHandle=this._cpuSwimlaneMarshaler.getCurrentResultStatus().then((e=>{if(e.preparationStatus!==d.ResultPreparationStatus.Completed)return this._droppedRequest=!0,c.EmptyOccurrencesDto;if(n!==d.RowType.CallTreeNode&&n!==d.RowType.Function&&n!==d.RowType.Module)return c.EmptyOccurrencesDto;const t=this._dataWarehouse.getResultById(e.result.resultId),i={view:"timestamps",type:d.ResultTaskType.GetData,begin:s.jsonValue,end:a.jsonValue,rowId:r,rowType:n,samples:Math.max(this._samples,1)};return t.getResult(i)})).then((e=>{this._timestamps=e.timestamps?e.timestamps.map((e=>new h.BigNumber(e.h,e.l))):[],this._newDataEvent.invokeEvent(this)})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutRollingGraph),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}getOccurrencePointIndex(e,t,i,a,n){const o=(e,t)=>t.greater(e);switch(n){case s.PointToFind.LessThanOrEqual:return r.Utilities.findLessThan(e,t,o,i,a);case s.PointToFind.GreaterThanOrEqual:return r.Utilities.findGreaterThan(e,t,o,i,a);case s.PointToFind.Nearest:default:{const i=r.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1),a=h.BigNumber.subtract(t,e[i]),n=h.BigNumber.subtract(e[s],t);return a.greater(n)?s:i}}}}t.HighlightDataSeries=c,c.EmptyOccurrencesDto={timestamps:[]}}.apply(t,s),void 0===a||(e.exports=a)},371:(e,t,i)=>{var s,a;s=[i,t,i(68)],a=function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),window.CpuSwimlaneFactory=i.CpuSwimlaneFactory}.apply(t,s),void 0===a||(e.exports=a)},886:(e,t,i)=>{var s;s=function(e,t){"use strict";var i,s,a,r,n,o;Object.defineProperty(t,"__esModule",{value:!0}),t.ResultStage=t.ResultNotStartedReason=t.ResultPreparationStatus=t.RowType=t.ResultTaskType=t.DataLoadEvent=void 0,(o=t.DataLoadEvent||(t.DataLoadEvent={}))[o.DataLoadStart=0]="DataLoadStart",o[o.DataLoadCompleted=1]="DataLoadCompleted",o[o.DataLoadFailed=2]="DataLoadFailed",o[o.DataLoadCanceled=3]="DataLoadCanceled",(n=t.ResultTaskType||(t.ResultTaskType={}))[n.Expand=1]="Expand",n[n.Search=2]="Search",n[n.GetData=3]="GetData",n[n.Sort=4]="Sort",(r=t.RowType||(t.RowType={}))[r.Unknown=0]="Unknown",r[r.Process=1]="Process",r[r.Module=2]="Module",r[r.Function=3]="Function",r[r.Thread=4]="Thread",r[r.CallTreeNode=5]="CallTreeNode",r[r.Allocation=6]="Allocation",(a=t.ResultPreparationStatus||(t.ResultPreparationStatus={}))[a.NotStarted=0]="NotStarted",a[a.InProgress=1]="InProgress",a[a.Completed=2]="Completed",a[a.Canceled=3]="Canceled",a[a.Failed=4]="Failed",(s=t.ResultNotStartedReason||(t.ResultNotStartedReason={}))[s.Unknown=0]="Unknown",s[s.NoValidTimeSelection=1]="NoValidTimeSelection",s[s.NoValidThreadSelection=2]="NoValidThreadSelection",s[s.ToolIsDisabled=3]="ToolIsDisabled",s[s.TargetRunningUnderDebugger=4]="TargetRunningUnderDebugger",(i=t.ResultStage||(t.ResultStage={}))[i.Unknown=0]="Unknown",i[i.Threads=1]="Threads",i[i.Sampling=2]="Sampling"}.apply(t,[i,t]),void 0===s||(e.exports=s)},117:t=>{"use strict";t.exports=e},560:e=>{"use strict";e.exports=t},226:e=>{"use strict";e.exports=i}},a={},function e(t){var i=a[t];if(void 0!==i)return i.exports;var r=a[t]={exports:{}};return s[t](r,r.exports,e),r.exports}(371);var s,a}));
// SIG // Begin signature block
// SIG // MIIoKAYJKoZIhvcNAQcCoIIoGTCCKBUCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // 3IuAhIAqmLtkuWEiMEv2FR+KKdLcBGpisRTjRUHXs4yg
// SIG // gg12MIIF9DCCA9ygAwIBAgITMwAAA68wQA5Mo00FQQAA
// SIG // AAADrzANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIzMTExNjE5MDkwMFoX
// SIG // DTI0MTExNDE5MDkwMFowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // zkvLNa2un9GBrYNDoRGkGv7d0PqtTBB4ViYakFbjuWpm
// SIG // F0KcvDAzzaCWJPhVgIXjz+S8cHEoHuWnp/n+UOljT3eh
// SIG // A8Rs6Lb1aTYub3tB/e0txewv2sQ3yscjYdtTBtFvEm9L
// SIG // 8Yv76K3Cxzi/Yvrdg+sr7w8y5RHn1Am0Ff8xggY1xpWC
// SIG // XFI+kQM18njQDcUqSlwBnexYfqHBhzz6YXA/S0EziYBu
// SIG // 2O2mM7R6gSyYkEOHgIGTVOGnOvvC5xBgC4KNcnQuQSRL
// SIG // iUI2CmzU8vefR6ykruyzt1rNMPI8OqWHQtSDKXU5JNqb
// SIG // k4GNjwzcwbSzOHrxuxWHq91l/vLdVDGDUwIDAQABo4IB
// SIG // czCCAW8wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFEcccTTyBDxkjvJKs/m4AgEF
// SIG // hl7BMEUGA1UdEQQ+MDykOjA4MR4wHAYDVQQLExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xFjAUBgNVBAUTDTIzMDAx
// SIG // Mis1MDE4MjYwHwYDVR0jBBgwFoAUSG5k5VAF04KqFzc3
// SIG // IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBhBggr
// SIG // BgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6Ly93
// SIG // d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAMBgNV
// SIG // HRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQCEsRbf
// SIG // 80dn60xTweOWHZoWaQdpzSaDqIvqpYHE5ZzuEMJWDdcP
// SIG // 72MGw8v6BSaJQ+a+hTCXdERnIBDPKvU4ENjgu4EBJocH
// SIG // lSe8riiZUAR+z+z4OUYqoFd3EqJyfjjOJBR2z94Dy4ss
// SIG // 7LEkHUbj2NZiFqBoPYu2OGQvEk+1oaUsnNKZ7Nl7FHtV
// SIG // 7CI2lHBru83e4IPe3glIi0XVZJT5qV6Gx/QhAFmpEVBj
// SIG // SAmDdgII4UUwuI9yiX6jJFNOEek6MoeP06LMJtbqA3Bq
// SIG // +ZWmJ033F97uVpyaiS4bj3vFI/ZBgDnMqNDtZjcA2vi4
// SIG // RRMweggd9vsHyTLpn6+nXoLy03vMeebq0C3k44pgUIEu
// SIG // PQUlJIRTe6IrN3GcjaZ6zHGuQGWgu6SyO9r7qkrEpS2p
// SIG // RjnGZjx2RmCamdAWnDdu+DmfNEPAddYjaJJ7PTnd+PGz
// SIG // G+WeH4ocWgVnm5fJFhItjj70CJjgHqt57e1FiQcyWCwB
// SIG // hKX2rGgN2UICHBF3Q/rsKOspjMw2OlGphTn2KmFl5J7c
// SIG // Qxru54A9roClLnHGCiSUYos/iwFHI/dAVXEh0S0KKfTf
// SIG // M6AC6/9bCbsD61QLcRzRIElvgCgaiMWFjOBL99pemoEl
// SIG // AHsyzG6uX93fMfas09N9YzA0/rFAKAsNDOcFbQlEHKiD
// SIG // T7mI20tVoCcmSIhJATCCB3owggVioAMCAQICCmEOkNIA
// SIG // AAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290
// SIG // IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4XDTEx
// SIG // MDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9zb2Z0
// SIG // IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJKoZI
// SIG // hvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t2G6q
// SIG // ghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7dN2vG
// SIG // EtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55JnOlo
// SIG // XtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJSJhIv
// SIG // 56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64DhkrG5k
// SIG // NXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ97/vj
// SIG // K1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+sYxd
// SIG // 6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4ftKd
// SIG // gCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf8NBS
// SIG // v4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOnqWbs
// SIG // YR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj43Bd
// SIG // D1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8GLhE
// SIG // fEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO3+xb
// SIG // n6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4X7Iv
// SIG // hNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXUpUMv
// SIG // dJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxGoGyY
// SIG // 0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3FQEE
// SIG // AwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVtqMp1
// SIG // ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYDVR0f
// SIG // BFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcBAQRS
// SIG // MFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0MjAx
// SIG // MV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGUMIGR
// SIG // BgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9jcy9w
// SIG // cmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIgHQBM
// SIG // AGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABhAHQA
// SIG // ZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // Z/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQwWVf
// SIG // Liw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZddZYSQ
// SIG // fYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9G6XU
// SIG // tR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKKELuk
// SIG // qQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP80Yr
// SIG // 3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ1h/D
// SIG // Mhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgycSca
// SIG // f7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6CPxNN
// SIG // ZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2l4bf
// SIG // 2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1HxS+
// SIG // YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9WfOX
// SIG // pQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpIlR+r
// SIG // +0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h15q/6
// SIG // /IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BXIqF4
// SIG // ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3ZbCoBI
// SIG // a/15n8G9bW1qyVJzEw16UM0xghoKMIIaBgIBATCBlTB+
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNy
// SIG // b3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMzAAAD
// SIG // rzBADkyjTQVBAAAAAAOvMA0GCWCGSAFlAwQCAQUAoIGu
// SIG // MBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisG
// SIG // AQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqGSIb3
// SIG // DQEJBDEiBCBj3ydf/NN5+h8FJn7ifEkmi2Ujwjp7vIvA
// SIG // 9yJCnj2edjBCBgorBgEEAYI3AgEMMTQwMqAUgBIATQBp
// SIG // AGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5taWNy
// SIG // b3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBALpswOO/
// SIG // xUYWiH0+ybWHUBpygyxFjaTqjhsszyAWCv90ZsICRlSa
// SIG // bU845J8HEO7M8GEPgAHmhSxROQq4xDbMDqbSi2LTy4YA
// SIG // jImZxrP9acANlhjXoUqmE87qNcpKta6YKIWF3TmomiT9
// SIG // JadTPaegjgmvlMQxMgMTES5uniUzYqxQo6FfXFCO+NA9
// SIG // idds5KLxwYVNWkGmD5AQj4Q5NwYxcCU34M1hRu9wHnsd
// SIG // 2fnZMZSnD5jX7TgD0MQmE75hqwIcP3tZC2nVeTiBJrXh
// SIG // 5iskn2VV1mXJIzZywc/Yo0lmjm0nKvoBZ5sj5sfhFdyV
// SIG // 6EI+/O6ranjA/w+KmbDrrddAKnihgheUMIIXkAYKKwYB
// SIG // BAGCNwMDATGCF4Awghd8BgkqhkiG9w0BBwKgghdtMIIX
// SIG // aQIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBUgYLKoZIhvcN
// SIG // AQkQAQSgggFBBIIBPTCCATkCAQEGCisGAQQBhFkKAwEw
// SIG // MTANBglghkgBZQMEAgEFAAQgNYpjpYmdotLYkfiUT9s+
// SIG // bDsIjtT3foYsHKltAAXvsssCBmV7JsGkKxgTMjAyNDAx
// SIG // MDMxNjAzMDguNTIzWjAEgAIB9KCB0aSBzjCByzELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9zb2Z0
// SIG // IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UECxMeblNo
// SIG // aWVsZCBUU1MgRVNOOjMzMDMtMDVFMC1EOTQ3MSUwIwYD
// SIG // VQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNl
// SIG // oIIR6jCCByAwggUIoAMCAQICEzMAAAHMhqXcN+vZYS0A
// SIG // AQAAAcwwDQYJKoZIhvcNAQELBQAwfDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt
// SIG // U3RhbXAgUENBIDIwMTAwHhcNMjMwNTI1MTkxMjAxWhcN
// SIG // MjQwMjAxMTkxMjAxWjCByzELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjElMCMGA1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3Bl
// SIG // cmF0aW9uczEnMCUGA1UECxMeblNoaWVsZCBUU1MgRVNO
// SIG // OjMzMDMtMDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNyb3Nv
// SIG // ZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIICIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAg8AMIICCgKCAgEAzLEiBfHvTZhHPvNz
// SIG // VWRoFlmYv8AWLfM4cQH0hjO8cOyuwmwP9QOBoaLz75CG
// SIG // PO97Z8s3cmXvumB18fkXetfJUA5ppuV+HromBudy3e1i
// SIG // Cvg3focotB/ew+hzOGcxqqL5sAdH2d5YfqYSS6D0/vcq
// SIG // 0yxc5JCsNlXG+8FzAc4g9DFVWG5sEZUWsqU57Zd/SBDQ
// SIG // hIo1vY+jBJU8lz9s63NDrYUDeUazE2OYmY2tzMhwhZmD
// SIG // Bop5h37bGht2HYvBmvAUI3baE5uXVYZ6rNqijRDqmUqJ
// SIG // 9vEeF339LZSS+VB8iN28sB//s0HibvKp7EgovFRTzrGR
// SIG // G+nGc4Vx2gIkhrXSgG0EWgCIRMWyFKXicqQu5fsKigtw
// SIG // TvQAxrqQfWYFBW0r+RAhYzA8235vDOc89gOMWDT0F6mb
// SIG // 9MBli/o072+5BWIgzz3vs0cgW85q0qTmwe16o6s1BTSp
// SIG // cKfjMdeZNRexTLORDNrhuvCELHQBgZGW0g5rhpoz22e3
// SIG // bYpvlx7odzUuiZl2D0u64pKQm1LDGTJ+XlsYlhSJOn9N
// SIG // LJEeES1podDejqvimCNXwOfS8xogGzq3MYL0JEaNzg+K
// SIG // NSVvc9UzTMBG5Mz61zKPK6xrLhqMmFnLJvcYXdBlyERx
// SIG // wuuJ82yN3tBuY6hLFkHOLmkHkkcq+9CkYo81clo42H7B
// SIG // Lb1TJScCAwEAAaOCAUkwggFFMB0GA1UdDgQWBBSCphxk
// SIG // XTyHS0V7bEeV0UsjN/tpDDAfBgNVHSMEGDAWgBSfpxVd
// SIG // AF5iXYP05dJlpxtTNRnpcjBfBgNVHR8EWDBWMFSgUqBQ
// SIG // hk5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3Bz
// SIG // L2NybC9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIwUENB
// SIG // JTIwMjAxMCgxKS5jcmwwbAYIKwYBBQUHAQEEYDBeMFwG
// SIG // CCsGAQUFBzAChlBodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
// SIG // b20vcGtpb3BzL2NlcnRzL01pY3Jvc29mdCUyMFRpbWUt
// SIG // U3RhbXAlMjBQQ0ElMjAyMDEwKDEpLmNydDAMBgNVHRMB
// SIG // Af8EAjAAMBYGA1UdJQEB/wQMMAoGCCsGAQUFBwMIMA4G
// SIG // A1UdDwEB/wQEAwIHgDANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // eRlDKPV74lJd4O9rvKEE6KyCg6AHYFmeC0PfnQBEApmn
// SIG // rbE4ZMWzZtebHruxpsKWXYTEDfEzXXRpIubOSHvmgNlR
// SIG // KPb2c99ZZbrBwVwFa0Labn0KrSAPtp57rH2mL4ora+qe
// SIG // ZFU+tPSyEzmIHSkVhKX8f+Mk+UfcjHisaMZJPLchohj2
// SIG // SuNEk+WdeDj3SX1W5GHgr5S0HJbF9flgWTcf12b2syZl
// SIG // 472I07htEG2accOGTt2aH30GMWWEc59M+NVOzAxZV6No
// SIG // oX2rHWx7rmupKR8SfQCKFHr4d5s71MWKdLtM98GAz6S7
// SIG // qPjNlWIfFzglAdLu+cRt0ufvfEyphW6mWIKYK+j/mCnm
// SIG // qNmKQdYs7POdGEs7sGl+5EcQFEZZjf4+R7+MGm5zn2W9
// SIG // +pg6iaeCHhpsD7cCPLRD7LkQJsq3no8oZGVe3X4CeDfN
// SIG // 0AYaR1WZQeBZpSUfMhd2gdeUFurcOAmh/jzCA7nehnji
// SIG // TuHEBPpU3OqyCZjeHH4tk0xu3uPU74Ql3wUtqczsm/WH
// SIG // pkptJK5PIyYes4Hhqs7ZO83sHxPt7IUEXO+LFy2OfKb1
// SIG // aM534Hxr8tZZW6uDnsveiqLsIroQ7cbipU51u6cO8WjT
// SIG // 4SDLDsVvHaUqfdeRbSnzqikf3XyTrGxw0iWP4oic+Jli
// SIG // gBqMnXizOsy5qIUQj1pP0OYwggdxMIIFWaADAgECAhMz
// SIG // AAAAFcXna54Cm0mZAAAAAAAVMA0GCSqGSIb3DQEBCwUA
// SIG // MIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYDVQQDEylN
// SIG // aWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3Jp
// SIG // dHkgMjAxMDAeFw0yMTA5MzAxODIyMjVaFw0zMDA5MzAx
// SIG // ODMyMjVaMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
// SIG // YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
// SIG // VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNV
// SIG // BAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEw
// SIG // MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA
// SIG // 5OGmTOe0ciELeaLL1yR5vQ7VgtP97pwHB9KpbE51yMo1
// SIG // V/YBf2xK4OK9uT4XYDP/XE/HZveVU3Fa4n5KWv64NmeF
// SIG // RiMMtY0Tz3cywBAY6GB9alKDRLemjkZrBxTzxXb1hlDc
// SIG // wUTIcVxRMTegCjhuje3XD9gmU3w5YQJ6xKr9cmmvHaus
// SIG // 9ja+NSZk2pg7uhp7M62AW36MEBydUv626GIl3GoPz130
// SIG // /o5Tz9bshVZN7928jaTjkY+yOSxRnOlwaQ3KNi1wjjHI
// SIG // NSi947SHJMPgyY9+tVSP3PoFVZhtaDuaRr3tpK56KTes
// SIG // y+uDRedGbsoy1cCGMFxPLOJiss254o2I5JasAUq7vnGp
// SIG // F1tnYN74kpEeHT39IM9zfUGaRnXNxF803RKJ1v2lIH1+
// SIG // /NmeRd+2ci/bfV+AutuqfjbsNkz2K26oElHovwUDo9Fz
// SIG // pk03dJQcNIIP8BDyt0cY7afomXw/TNuvXsLz1dhzPUNO
// SIG // wTM5TI4CvEJoLhDqhFFG4tG9ahhaYQFzymeiXtcodgLi
// SIG // Mxhy16cg8ML6EgrXY28MyTZki1ugpoMhXV8wdJGUlNi5
// SIG // UPkLiWHzNgY1GIRH29wb0f2y1BzFa/ZcUlFdEtsluq9Q
// SIG // BXpsxREdcu+N+VLEhReTwDwV2xo3xwgVGD94q0W29R6H
// SIG // XtqPnhZyacaue7e3PmriLq0CAwEAAaOCAd0wggHZMBIG
// SIG // CSsGAQQBgjcVAQQFAgMBAAEwIwYJKwYBBAGCNxUCBBYE
// SIG // FCqnUv5kxJq+gpE8RjUpzxD/LwTuMB0GA1UdDgQWBBSf
// SIG // pxVdAF5iXYP05dJlpxtTNRnpcjBcBgNVHSAEVTBTMFEG
// SIG // DCsGAQQBgjdMg30BATBBMD8GCCsGAQUFBwIBFjNodHRw
// SIG // Oi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL0RvY3Mv
// SIG // UmVwb3NpdG9yeS5odG0wEwYDVR0lBAwwCgYIKwYBBQUH
// SIG // AwgwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAU1fZWy4/oolxiaNE9lJBb186aGMQwVgYDVR0f
// SIG // BE8wTTBLoEmgR4ZFaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // XzIwMTAtMDYtMjMuY3JsMFoGCCsGAQUFBwEBBE4wTDBK
// SIG // BggrBgEFBQcwAoY+aHR0cDovL3d3dy5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXRfMjAxMC0w
// SIG // Ni0yMy5jcnQwDQYJKoZIhvcNAQELBQADggIBAJ1Vffwq
// SIG // reEsH2cBMSRb4Z5yS/ypb+pcFLY+TkdkeLEGk5c9MTO1
// SIG // OdfCcTY/2mRsfNB1OW27DzHkwo/7bNGhlBgi7ulmZzpT
// SIG // Td2YurYeeNg2LpypglYAA7AFvonoaeC6Ce5732pvvinL
// SIG // btg/SHUB2RjebYIM9W0jVOR4U3UkV7ndn/OOPcbzaN9l
// SIG // 9qRWqveVtihVJ9AkvUCgvxm2EhIRXT0n4ECWOKz3+SmJ
// SIG // w7wXsFSFQrP8DJ6LGYnn8AtqgcKBGUIZUnWKNsIdw2Fz
// SIG // Lixre24/LAl4FOmRsqlb30mjdAy87JGA0j3mSj5mO0+7
// SIG // hvoyGtmW9I/2kQH2zsZ0/fZMcm8Qq3UwxTSwethQ/gpY
// SIG // 3UA8x1RtnWN0SCyxTkctwRQEcb9k+SS+c23Kjgm9swFX
// SIG // SVRk2XPXfx5bRAGOWhmRaw2fpCjcZxkoJLo4S5pu+yFU
// SIG // a2pFEUep8beuyOiJXk+d0tBMdrVXVAmxaQFEfnyhYWxz
// SIG // /gq77EFmPWn9y8FBSX5+k77L+DvktxW/tM4+pTFRhLy/
// SIG // AsGConsXHRWJjXD+57XQKBqJC4822rpM+Zv/Cuk0+CQ1
// SIG // ZyvgDbjmjJnW4SLq8CdCPSWU5nR0W2rRnj7tfqAxM328
// SIG // y+l7vzhwRNGQ8cirOoo6CGJ/2XBjU02N7oJtpQUQwXEG
// SIG // ahC0HVUzWLOhcGbyoYIDTTCCAjUCAQEwgfmhgdGkgc4w
// SIG // gcsxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
// SIG // dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
// SIG // aWNyb3NvZnQgQ29ycG9yYXRpb24xJTAjBgNVBAsTHE1p
// SIG // Y3Jvc29mdCBBbWVyaWNhIE9wZXJhdGlvbnMxJzAlBgNV
// SIG // BAsTHm5TaGllbGQgVFNTIEVTTjozMzAzLTA1RTAtRDk0
// SIG // NzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAg
// SIG // U2VydmljZaIjCgEBMAcGBSsOAwIaAxUATk7md7mH4ooU
// SIG // uM0U6MYrA7fZiaSggYMwgYCkfjB8MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1T
// SIG // dGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQsFAAIFAOlA
// SIG // AvYwIhgPMjAyNDAxMDMxNTU5NTBaGA8yMDI0MDEwNDE1
// SIG // NTk1MFowdDA6BgorBgEEAYRZCgQBMSwwKjAKAgUA6UAC
// SIG // 9gIBADAHAgEAAgIXsTAHAgEAAgITYTAKAgUA6UFUdgIB
// SIG // ADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMC
// SIG // oAowCAIBAAIDB6EgoQowCAIBAAIDAYagMA0GCSqGSIb3
// SIG // DQEBCwUAA4IBAQB8IFZEfNWvIBXmOedI123NVoKxI2Zk
// SIG // tJTrjs+KRD8NV4IS+Js/KX4votDxClo+x99EPB8zTK7w
// SIG // QE6bA/MKQwoPBKsI9ip+u6RARmykPSVkiJb/F02Ymekz
// SIG // 1DEgO4Ak4uwCcvuaFSV98INQX6sgQpipv/J4A5Ksu/ox
// SIG // 5nhHdiyva/TCtVV5LxF5bCiltP9JpgjloEnbcZG5xEgn
// SIG // WHK2iQXatUvSWcLLyq/fno2C6lBDZtAUresyz8uSTffk
// SIG // 0G8VXS3gmIXXquVqPYayDfCR+sFLbny8l++wk0ZuDY+c
// SIG // /oltNdDCUMRi8ZXnZwbmmgHnS7hqXWDWFqOnJdDxQkSq
// SIG // tcU3MYIEDTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMx
// SIG // EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1Jl
// SIG // ZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3Jh
// SIG // dGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3Rh
// SIG // bXAgUENBIDIwMTACEzMAAAHMhqXcN+vZYS0AAQAAAcww
// SIG // DQYJYIZIAWUDBAIBBQCgggFKMBoGCSqGSIb3DQEJAzEN
// SIG // BgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQgVGyv
// SIG // f4ArdwIqVHCAHeBSavX7zGj8ryv3vQDUMCEi8wgwgfoG
// SIG // CyqGSIb3DQEJEAIvMYHqMIHnMIHkMIG9BCDW7mUBwv7D
// SIG // AhPnIClUpMCqQyAn53nxWWIA2xeB63BY5jCBmDCBgKR+
// SIG // MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
// SIG // dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
// SIG // aWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1p
// SIG // Y3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB
// SIG // zIal3Dfr2WEtAAEAAAHMMCIEIJOJZ343gpUarqGumbIn
// SIG // jZTjqsA4I/BcMX8cYL5Hmg7IMA0GCSqGSIb3DQEBCwUA
// SIG // BIICAEzsd4RVCpm29RlUmENlkl9EAoPja5gnEHx7zDJE
// SIG // G13BcsRvkqYiCXkAt6MX5QrPoFQhzp8v8dSICq5g0xtJ
// SIG // xRQiXfjHAlawprvss5dbXiuBWIANLH4HsCrHpJHajBuZ
// SIG // NGrYyIDI5jVMmzi8qclahosYUUmQ7KjESKHHDRjfRJ/8
// SIG // SucNQm8evHC1uqTrASfEoO2+tDDLTtU3QuJYxrSyYeB8
// SIG // ZXhBIWIjI19RlG1UomdgzYVvHsUOU6sJKNVEFEKdXe5B
// SIG // TCJKN+zqDqbcowHorkCr/PuHuMQ2j3ZqhGMSY+fmA/Fj
// SIG // z6NSxpAfE+BsCnscQT4N6ujK8s/9HBiJ9FZ1QosGjOmI
// SIG // NjuW9PFXdbhAu5VgPd/8yzH+iNvCnCs2Jkdp8gsyJrPS
// SIG // DLgrDLRe6n2wdqPq7z52BXnoJpNgg5kPpCCgpO2gp7bt
// SIG // 8YT9LHuglMctq2G8zgz2qUuCvHbe73Wlqn7pAR6SQv+6
// SIG // teZIAkc+nrl2wGHmRDBRDp1cawUMqP6Xlz07SIKqak4m
// SIG // ggTq6QXQuFWZKDWHhn09gvYWwUDcfwutVR+0X+PeOIG0
// SIG // lQlqZ2H6SfT+oYx18nOrH9rRB8Cu60tb8MBiJQ0mud9T
// SIG // cPhIgesZMmOWmzS3fGlxVIs4iVhKXFZ0Gp9w5vtZRAbo
// SIG // Kzmo+GUKaUgM/HKBEvQqJ7MiIvKF
// SIG // End signature block
