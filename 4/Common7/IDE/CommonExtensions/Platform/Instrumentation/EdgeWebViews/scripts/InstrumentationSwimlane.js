define("instrumentationSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return s={67:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(803)],a=function(e,t,i,s,a,n,r,o,h,l,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EnabledDataSeries=void 0;class d{constructor(e,t,i){this._logger=l.getLogger("EnabledDataSeries"),this._enabledAtStart=!1,this._toggleEvents=[],this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._newDataEvent=new r.AggregatedEvent,this._colorScheme=new a.ChartColorScheme("#92AB00","#AECD00"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*d.PointRadiusInPixels+"px",this._marker.style.height=2*d.PointRadiusInPixels+"px",this._InstrumentationDataSeries=e,(new u.InstrumentationSwimlaneMarshaler).isToolSupported().then((e=>e?(this._enabledAtStart=t,o.loadDataWarehouse().then((e=>{const t={customDomain:{CounterId:d.counterId}};return e.getFilteredData(t,d.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))):Promise.resolve(null)))}static get counterId(){return"InstrumentationTool.Counters.CollectionEnabled"}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._InstrumentationDataSeries.cachedPoints.length||0===this._toggleEvents.length&&!this._enabledAtStart)return null;let i={Timestamp:e,Value:0};const a=(e,t)=>t.Timestamp.greater(e.Timestamp);let r=!0;if(0!==this._toggleEvents.length){const t=n.Utilities.findLessThan(this._toggleEvents,i,a);this._toggleEvents[t].Timestamp.greater(e)?r=this._enabledAtStart:0===this._toggleEvents[t].Value&&(r=!1)}if(!r)return null;const o=this.getPointIndex(this._InstrumentationDataSeries.cachedPoints,i.Timestamp,0,this._InstrumentationDataSeries.cachedPoints.length-1,t);return i=this._InstrumentationDataSeries.cachedPoints[o],{timestamp:i.Timestamp,tooltip:this._tooltip,value:i.Value,color:this._colorScheme}}onDataUpdate(e){this.requestUpdate()}draw(e,t){if(0===this._InstrumentationDataSeries.cachedPoints.length||0===t.chartRect.width)return;let i=0,a=this._InstrumentationDataSeries.cachedPoints.length-1,n=this._enabledAtStart;e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor,this._toggleEvents.forEach((r=>{r.Value>.5?(i=this.getPointIndex(this._InstrumentationDataSeries.cachedPoints,r.Timestamp,0,this._InstrumentationDataSeries.cachedPoints.length-1,s.PointToFind.Nearest),n=!0):(a=this.getPointIndex(this._InstrumentationDataSeries.cachedPoints,r.Timestamp,0,this._InstrumentationDataSeries.cachedPoints.length-1,s.PointToFind.Nearest),n=!1,this.drawBetween(e,t,i,a))})),n&&(a=this._InstrumentationDataSeries.cachedPoints.length-1,this.drawBetween(e,t,i,a)),e.restore()}drawBetween(e,t,i,s){const a=e=>t.chartRect.height-n.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),r=e=>n.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.beginPath();for(let t=i;t<=s;++t)e.lineTo(r(this._InstrumentationDataSeries.cachedPoints[t].Timestamp),a(this._InstrumentationDataSeries.cachedPoints[t].Value));e.stroke(),e.lineTo(r(this._InstrumentationDataSeries.cachedPoints[s].Timestamp),a(t.gridY.min)),e.lineTo(r(this._InstrumentationDataSeries.cachedPoints[i].Timestamp),t.chartRect.height),e.closePath(),e.fill();const o=h.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);if(h.BigNumber.convertFromNumber(d.CounterFrequencyPerPixel).greater(o))for(let t=i;t<=s;++t)e.beginPath(),e.arc(r(this._InstrumentationDataSeries.cachedPoints[t].Timestamp),a(this._InstrumentationDataSeries.cachedPoints[t].Value),d.PointRadiusInPixels,0,2*Math.PI),e.fill()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{this._countersResult.getResult(null).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate)}cachePoints(e){e.p.forEach((e=>{this._toggleEvents.push({Timestamp:new h.BigNumber(e.t.h,e.t.l),Value:e.v,ToolTip:e.tt})})),this._newDataEvent.invokeEvent(this)}getPointIndex(e,t,i,a,r){const o=(e,t)=>t.Timestamp.greater(e.Timestamp),l={Timestamp:t,Value:0};switch(r){case s.PointToFind.LessThanOrEqual:return n.Utilities.findLessThan(e,l,o,i,a);case s.PointToFind.GreaterThanOrEqual:return n.Utilities.findGreaterThan(e,l,o,i,a);case s.PointToFind.Nearest:default:{const i=n.Utilities.findLessThan(e,l,o),s=Math.min(i+1,e.length-1),a=h.BigNumber.subtract(t,e[i].Timestamp),r=h.BigNumber.subtract(e[s].Timestamp,t);return a.greater(r)?s:i}}}}t.EnabledDataSeries=d,d.PointRadiusInPixels=2.5,d.CounterFrequencyPerPixel=1e8/(2*d.PointRadiusInPixels+4)}.apply(t,s),void 0===a||(e.exports=a)},479:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(803),i(886)],a=function(e,t,i,s,a,n,r,o,h,l,u,d){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HighlightDataSeries=void 0;class c{constructor(e,t,i){this._logger=l.getLogger("HighlightDataSeries"),this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._newDataEvent=new r.AggregatedEvent,this._onHighlightChangedHandler=e=>this.onHighlightChanged(e),this._samples=250,this._InstrumentationSwimlaneMarshaler=new u.InstrumentationSwimlaneMarshaler,this._rowId=-1,this._rowType=d.RowType.Unknown,this._timestamps=[],this._colorScheme=new a.ChartColorScheme("#903F8B","#903F8B"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width="1px",this._marker.style.height="100%",this._InstrumentationDataSeries=e,this._currentTimespan=t,this._InstrumentationSwimlaneMarshaler.graphHighlightEvent.addEventListener(this._onHighlightChangedHandler),this._InstrumentationSwimlaneMarshaler.graphHighlightingFeatureEnabled().then((e=>(this._graphHighlightingFeatureEnabled=e,this._graphHighlightingFeatureEnabled?o.loadDataWarehouse().then((e=>{this._dataWarehouse=e;const t=this._droppedRequest;this._droppedRequest=!1,this._dataWarehouseRequestHandle=null,t&&this.requestUpdate()})):Promise.resolve(null))))}onHighlightChanged(e){null===e?(this._rowId=-1,this._rowType=d.RowType.Unknown):(this._rowId=e.rowId,this._rowType=e.rowType),this.requestUpdate()}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._InstrumentationSwimlaneMarshaler.graphHighlightEvent.removeEventListener(this._onHighlightChangedHandler),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){this.requestUpdate()}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._InstrumentationDataSeries.cachedPoints.length||0===this._timestamps.length)return null;const i=this.getOccurrencePointIndex(this._timestamps,e,0,this._timestamps.length-1,t);return{timestamp:this._timestamps[i],tooltip:this._tooltip,value:Number.NaN,color:this._colorScheme}}draw(e,t){if(0===this._InstrumentationDataSeries.cachedPoints.length||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0||0===this._timestamps.length)return;2*t.chartRect.width!==this._samples&&(this._samples=2*t.chartRect.width,this.requestUpdate()),e.save(),e.lineWidth=1,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=e=>n.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),a=e=>t.chartRect.height-n.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);this._timestamps.forEach((n=>{const r=i(n),o=this._InstrumentationDataSeries.getPointAtTimestamp(n,s.PointToFind.LessThanOrEqual),h=this._InstrumentationDataSeries.getPointAtTimestamp(n,s.PointToFind.GreaterThanOrEqual);if(!o||!h)return;const l=i(o.timestamp),u=a(o.value),d=i(h.timestamp),c={x:r,y:u+(a(h.value)-u)/(d-l)*(r-l)};e.beginPath(),e.moveTo(c.x+.5,a(t.gridY.min)),e.lineTo(c.x+.5,c.y),e.stroke(),e.closePath()})),e.restore()}requestUpdate(){this._graphHighlightingFeatureEnabled&&(this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),s=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=h.BigNumber.add(s,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),n=this._rowId,r=this._rowType;this._InstrumentationSwimlaneMarshaler.getCurrentResultStatus().then((e=>{if(e.preparationStatus!==d.ResultPreparationStatus.Completed)return this._droppedRequest=!0,c.EmptyOccurrencesDto;if(r!==d.RowType.CallTreeNode&&r!==d.RowType.Function&&r!==d.RowType.Module)return c.EmptyOccurrencesDto;const t=this._dataWarehouse.getResultById(e.result.resultId),i={view:"timestamps",type:d.ResultTaskType.GetData,begin:s.jsonValue,end:a.jsonValue,rowId:n,rowType:r,samples:Math.max(this._samples,1)};return t.getResult(i)})).then((e=>{this._timestamps=e.timestamps.map((e=>new h.BigNumber(e.h,e.l))),this._newDataEvent.invokeEvent(this)})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate))}getOccurrencePointIndex(e,t,i,a,r){const o=(e,t)=>t.greater(e);switch(r){case s.PointToFind.LessThanOrEqual:return n.Utilities.findLessThan(e,t,o,i,a);case s.PointToFind.GreaterThanOrEqual:return n.Utilities.findGreaterThan(e,t,o,i,a);case s.PointToFind.Nearest:default:{const i=n.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1),a=h.BigNumber.subtract(t,e[i]),r=h.BigNumber.subtract(e[s],t);return a.greater(r)?s:i}}}}t.HighlightDataSeries=c,c.EmptyOccurrencesDto={timestamps:[]}}.apply(t,s),void 0===a||(e.exports=a)},371:(e,t,i)=>{var s,a;s=[i,t,i(31)],a=function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),window.InstrumentationSwimlaneFactory=i.InstrumentationSwimlaneFactory}.apply(t,s),void 0===a||(e.exports=a)},892:(e,t,i)=>{var s,a;s=[i,t,i(226),i(560),i(560),i(560),i(117),i(117),i(117),i(117)],a=function(e,t,i,s,a,n,r,o,h,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationCountersDataSeries=void 0;class u{constructor(e,t,i,s,a,n,d){this._logger=l.getLogger("InstrumentationCountersDataSeries"),this._cachedPoints=[],this._drawFill=!1,this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._currentTimespan=new h.JsonTimespan(h.BigNumber.zero,h.BigNumber.zero),this._seriesMin=0,this._seriesMax=0,this._newDataEvent=new r.AggregatedEvent,this._samples=250,this._currentTimespan=t,this._unitConverter=i,this._colorScheme=s,this._drawFill=a,this._title=n,this._tooltip=d,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*u.PointRadiusInPixels+"px",this._marker.style.height=2*u.PointRadiusInPixels+"px",o.loadDataWarehouse().then((t=>{const i={customDomain:{Task:"GetCounter",CounterId:e}};return t.getFilteredData(i,u.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get cachedPoints(){return this._cachedPoints}get minValue(){return this._seriesMin}get maxValue(){return this._seriesMax}get marker(){return this._marker}get title(){return this._title}get tooltip(){return this._tooltip}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){const t=this._cachedPoints.length;(this._currentTimespan.contains(e)||0===t||t>0&&this._currentTimespan.end.greater(this._cachedPoints[t-1].Timestamp))&&this.requestUpdate()}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._cachedPoints.length)return null;let s={Timestamp:e,Value:0};const r=(e,t)=>t.Timestamp.greater(e.Timestamp);switch(t){case a.PointToFind.LessThanOrEqual:{const e=n.Utilities.findLessThan(this._cachedPoints,s,r);s=this._cachedPoints[e];break}case a.PointToFind.GreaterThanOrEqual:{const e=n.Utilities.findGreaterThan(this._cachedPoints,s,r);s=this._cachedPoints[e];break}case a.PointToFind.Nearest:default:{const t=n.Utilities.findLessThan(this._cachedPoints,s,r),i=Math.min(t+1,this._cachedPoints.length-1),a=h.BigNumber.subtract(e,this._cachedPoints[t].Timestamp),o=h.BigNumber.subtract(this._cachedPoints[i].Timestamp,e),l=a.greater(o)?i:t;s=this._cachedPoints[l];break}}return{timestamp:s.Timestamp,tooltip:i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabel",this._unitConverter.formatNumber(s.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0)),value:s.Value,color:this._colorScheme}}draw(e,t){if(0===this._cachedPoints.length||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0)return;t.chartRect.width!==this._samples&&(this._samples=t.chartRect.width,this.requestUpdate());const i=e=>t.chartRect.height-n.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),s=e=>n.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const a=s(this._cachedPoints[0].Timestamp);e.beginPath(),e.moveTo(a,i(this._cachedPoints[0].Value)),this._cachedPoints.forEach((t=>e.lineTo(s(t.Timestamp),i(t.Value)))),e.stroke(),this._drawFill&&(e.lineTo(s(this._cachedPoints[this._cachedPoints.length-1].Timestamp),i(t.gridY.min)),e.lineTo(a,t.chartRect.height),e.closePath(),e.fill());const r=h.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);h.BigNumber.convertFromNumber(u.CounterFrequencyPerPixel).greater(r)&&this._cachedPoints.forEach((t=>{e.beginPath(),e.arc(s(t.Timestamp),i(t.Value),u.PointRadiusInPixels,0,2*Math.PI),e.fill()})),e.restore()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),i=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=h.BigNumber.add(i,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),n={type:"SamplePoints",begin:i.jsonValue,end:a.jsonValue,samples:Math.max(this._samples,2)};this._countersResult.getResult(n).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),s.Constants.TimeoutImmediate)}cachePoints(e){this._cachedPoints=e.p.map((e=>{const t=new h.BigNumber(e.t.h,e.t.l);return this._seriesMin=Math.min(this._seriesMin,e.v),this._seriesMax=Math.max(this._seriesMax,e.v),{Timestamp:t,Value:e.v,ToolTip:e.tt}})),this._newDataEvent.invokeEvent(this)}}t.InstrumentationCountersDataSeries=u,u.PointRadiusInPixels=2.5,u.CounterFrequencyPerPixel=1e8/(2*u.PointRadiusInPixels+4)}.apply(t,s),void 0===a||(e.exports=a)},31:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(892),i(67),i(479)],a=function(e,t,i,s,a,n,r,o,h,l,u,d,c,m){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationSwimlaneFactory=void 0,t.InstrumentationSwimlaneFactory=function(e,t,g,p,_,T){const w=new u.SwimlaneConfiguration(e,_,p);w.header.isBodyExpanded=t;const S=w.graph,P=new i.LocalizedUnitConverter(S.jsonConfig.Units,S.resources),v=[],b=new d.InstrumentationCountersDataSeries(S.jsonConfig.Series[0].DataSource.CounterId,w.graph.timeRange,new i.LocalizedUnitConverter(S.jsonConfig.Units,S.resources),new a.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)"),!0,w.graph.resources[S.jsonConfig.Series[0].Legend],w.graph.resources[S.jsonConfig.Series[0].LegendTooltip]);v.push(b);const R=new c.EnabledDataSeries(b,S.jsonConfig.EnabledAtStart,w.graph.resources.InstrumentationGraphProfilingEnabled);if(v.push(R),!S.jsonConfig.IsCollecting&&!S.jsonConfig.IsPerfDebugger){const e=new m.HighlightDataSeries(b,w.graph.timeRange,w.graph.resources.InstrumentationGraphCurrentFunction);v.push(e)}w.graph.jsonConfig.Series=[];const D=new r.MultiSeriesGraph(w.graph,v);D.container.setAttribute("aria-label",e.Title);const I=new o.Scale(w.graph.scale,s.ScaleType.Left,P),C=new o.Scale(w.graph.scale,s.ScaleType.Right,P);D.scaleChangedEvent.addEventListener(I.onScaleChanged.bind(I)),D.scaleChangedEvent.addEventListener(C.onScaleChanged.bind(C)),w.header.unit=w.graph.unit;const E=new l.SwimlaneBase(w.header,w.graph.height,_,T);return D.scaleChangedEvent.addEventListener(E.onScaleChanged.bind(E)),E.addMainRegionControl(new h.SelectionOverlay(D,_,T,w.id)),E.addMainRegionControl(new n.GridLineRenderer(_)),E.addLeftRegionControl(I),E.addRightRegionControl(C),E}}.apply(t,s),void 0===a||(e.exports=a)},803:(e,t,i)=>{var s,a;s=[i,t,i(226),i(117)],a=function(e,t,i,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationSwimlaneMarshaler=void 0;let a=null;t.InstrumentationSwimlaneMarshaler=class{constructor(){null===a&&(a=i.JSONMarshaler.attachToMarshaledObject("Microsoft.DiagnosticsHub.Tools.Instrumentation.InstrumentationToolSwimlaneMarshaler",{},!0)),this._graphHighlightEvent=new s.ObservableEvent(a,"GraphHighlightChangedEvent")}isToolSupported(){return a._call("isToolSupported")}updateGraphHighlight(e,t){return a._call("raiseGraphHighlightChangedEvent",{rowId:e,rowType:t})}clearGraphHighlight(){return a._call("clearGraphHighlight")}get graphHighlightEvent(){return this._graphHighlightEvent}graphHighlightingFeatureEnabled(){return a._call("graphHighlightingFeatureEnabled")}getCurrentResultStatus(){return a._call("getCurrentResultStatus")}}}.apply(t,s),void 0===a||(e.exports=a)},886:(e,t,i)=>{var s;s=function(e,t){"use strict";var i,s,a,n,r,o;Object.defineProperty(t,"__esModule",{value:!0}),t.ResultStage=t.ResultNotStartedReason=t.ResultPreparationStatus=t.RowType=t.ResultTaskType=t.DataLoadEvent=void 0,(o=t.DataLoadEvent||(t.DataLoadEvent={}))[o.DataLoadStart=0]="DataLoadStart",o[o.DataLoadCompleted=1]="DataLoadCompleted",o[o.DataLoadFailed=2]="DataLoadFailed",o[o.DataLoadCanceled=3]="DataLoadCanceled",(r=t.ResultTaskType||(t.ResultTaskType={}))[r.Expand=1]="Expand",r[r.Search=2]="Search",r[r.GetData=3]="GetData",r[r.Sort=4]="Sort",(n=t.RowType||(t.RowType={}))[n.Unknown=0]="Unknown",n[n.Process=1]="Process",n[n.Module=2]="Module",n[n.Function=3]="Function",n[n.Thread=4]="Thread",n[n.CallTreeNode=5]="CallTreeNode",n[n.Allocation=6]="Allocation",(a=t.ResultPreparationStatus||(t.ResultPreparationStatus={}))[a.NotStarted=0]="NotStarted",a[a.InProgress=1]="InProgress",a[a.Completed=2]="Completed",a[a.Canceled=3]="Canceled",a[a.Failed=4]="Failed",(s=t.ResultNotStartedReason||(t.ResultNotStartedReason={}))[s.Unknown=0]="Unknown",s[s.NoValidTimeSelection=1]="NoValidTimeSelection",s[s.NoValidThreadSelection=2]="NoValidThreadSelection",s[s.ToolIsDisabled=3]="ToolIsDisabled",s[s.TargetRunningUnderDebugger=4]="TargetRunningUnderDebugger",(i=t.ResultStage||(t.ResultStage={}))[i.Unknown=0]="Unknown",i[i.Threads=1]="Threads",i[i.Instrumentation=2]="Instrumentation"}.apply(t,[i,t]),void 0===s||(e.exports=s)},117:t=>{"use strict";t.exports=e},560:e=>{"use strict";e.exports=t},226:e=>{"use strict";e.exports=i}},a={},function e(t){var i=a[t];if(void 0!==i)return i.exports;var n=a[t]={exports:{}};return s[t](n,n.exports,e),n.exports}(371);var s,a}));
// SIG // Begin signature block
// SIG // MIIoNwYJKoZIhvcNAQcCoIIoKDCCKCQCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // Si1Vj4Zdty2t33DT3DpiFveNPYOIEbnflkO8XcMFgvOg
// SIG // gg2FMIIGAzCCA+ugAwIBAgITMwAAA64tNVHIU49VHQAA
// SIG // AAADrjANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIzMTExNjE5MDg1OVoX
// SIG // DTI0MTExNDE5MDg1OVowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // 9CD8pjY3wxCoPmMhOkow7ycCltfqYnqk4wGNApzh2dTY
// SIG // +YqxozWTzJUOB38VxsgFQmXBFhOMdrGYGpvO9kdbNPkw
// SIG // HpTrW6hZqFuLLiRwGKEx4ZM5zVSqbHJuX2fPfUJ0Xmb+
// SIG // VrVsGw/BwBV2zz0rVtiSgqj3GeeGOsG7llfWyrSjyJqm
// SIG // 5DHE3o04BAI/NuhkHOv04euiqJGvHFCL8+fXvyD9OAxq
// SIG // 4fcJKtoyBb0PBA3oMNQeCsiUyLO+voZqVTOUsAWY0bN5
// SIG // YjkK4nq5DVaNdVrrowd5AX9gmz6D/TJTssns6pDCG00Y
// SIG // +Dh3ipWpnVmkhYcByyUSEKX3PLC8DkiAQQIDAQABo4IB
// SIG // gjCCAX4wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFIcf73Spl4cHOFoll27H9COd
// SIG // 4fE/MFQGA1UdEQRNMEukSTBHMS0wKwYDVQQLEyRNaWNy
// SIG // b3NvZnQgSXJlbGFuZCBPcGVyYXRpb25zIExpbWl0ZWQx
// SIG // FjAUBgNVBAUTDTIzMDAxMis1MDE4MzYwHwYDVR0jBBgw
// SIG // FoAUSG5k5VAF04KqFzc3IrVtqMp1ApUwVAYDVR0fBE0w
// SIG // SzBJoEegRYZDaHR0cDovL3d3dy5taWNyb3NvZnQuY29t
// SIG // L3BraW9wcy9jcmwvTWljQ29kU2lnUENBMjAxMV8yMDEx
// SIG // LTA3LTA4LmNybDBhBggrBgEFBQcBAQRVMFMwUQYIKwYB
// SIG // BQUHMAKGRWh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9w
// SIG // a2lvcHMvY2VydHMvTWljQ29kU2lnUENBMjAxMV8yMDEx
// SIG // LTA3LTA4LmNydDAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3
// SIG // DQEBCwUAA4ICAQBqyWA1Eu7PKNMjaaxl0V7gJ0XBysUo
// SIG // xZluMHJXFE2LEGZIZ2zMLYVjOnAGG/4dluRjSrZZo/8v
// SIG // wk4Xt8v6NBB9ofo8H1P/XidHytWTv9lg9MYu++6lPmu5
// SIG // fCozD3cI2NLZPW2BBhGX2D0R8tQBj0FbmZRuIucpiQ7D
// SIG // K3CHKlfKcc7MP8pPzuMv55Tox8+KFQD1NG6+bfbYA/BN
// SIG // PBkg4tyOh+exbaHfcNuodDJUIjq9dF6oa+Yjy0u0pUMI
// SIG // /B1t+8m6rJo0KSoZlrpesYl0jRhpt+hmqx8uENXoGJcY
// SIG // ZVJ5N2Skq90LViKNRhi9N4U+e8c4y9uXyomUF/6viCPJ
// SIG // 7huTNEJo75ehIJba+IWd3txUEc0R3y6DT6txC6cW1nR/
// SIG // LTbo9I/8fQq538G5IvJ+e5iSiOSVVkVk0i5m03Awy5E2
// SIG // ZSS4PVdQSCcFxmN4tpEfYuR7AAy/GJVtIDFlUpSgdXok
// SIG // pSui5hYtK1R9enXXvo+U/xGkLRc+qp4De3dZbzu7pOq7
// SIG // V/jCyhuCw0bEIAU4urCGIip7TI6GBRzD7yPzjFIqeZY7
// SIG // S4rVW5BRn2oEqpm8Su6yTIQvMIk8x2pwYNUa2339Z4gW
// SIG // 5xW21eFA5mLpo7NRSKRQms5OgAA18aCgqOU7Ds0h6q/Y
// SIG // B4BmEAtoTMl/TBiyKaMGAlEcdy+5FIhmzojMGjCCB3ow
// SIG // ggVioAMCAQICCmEOkNIAAAAAAAMwDQYJKoZIhvcNAQEL
// SIG // BQAwgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNo
// SIG // aW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQK
// SIG // ExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xMjAwBgNVBAMT
// SIG // KU1pY3Jvc29mdCBSb290IENlcnRpZmljYXRlIEF1dGhv
// SIG // cml0eSAyMDExMB4XDTExMDcwODIwNTkwOVoXDTI2MDcw
// SIG // ODIxMDkwOVowfjELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEoMCYG
// SIG // A1UEAxMfTWljcm9zb2Z0IENvZGUgU2lnbmluZyBQQ0Eg
// SIG // MjAxMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
// SIG // ggIBAKvw+nIQHC6t2G6qghBNNLrytlghn0IbKmvpWlCq
// SIG // uAY4GgRJun/DDB7dN2vGEtgL8DjCmQawyDnVARQxQtOJ
// SIG // DXlkh36UYCRsr55JnOloXtLfm1OyCizDr9mpK656Ca/X
// SIG // llnKYBoF6WZ26DJSJhIv56sIUM+zRLdd2MQuA3WraPPL
// SIG // bfM6XKEW9Ea64DhkrG5kNXimoGMPLdNAk/jj3gcN1Vx5
// SIG // pUkp5w2+oBN3vpQ97/vjK1oQH01WKKJ6cuASOrdJXtjt
// SIG // 7UORg9l7snuGG9k+sYxd6IlPhBryoS9Z5JA7La4zWMW3
// SIG // Pv4y07MDPbGyr5I4ftKdgCz1TlaRITUlwzluZH9TupwP
// SIG // rRkjhMv0ugOGjfdf8NBSv4yUh7zAIXQlXxgotswnKDgl
// SIG // mDlKNs98sZKuHCOnqWbsYR9q4ShJnV+I4iVd0yFLPlLE
// SIG // tVc/JAPw0XpbL9Uj43BdD1FGd7P4AOG8rAKCX9vAFbO9
// SIG // G9RVS+c5oQ/pI0m8GLhEfEXkwcNyeuBy5yTfv0aZxe/C
// SIG // HFfbg43sTUkwp6uO3+xbn6/83bBm4sGXgXvt1u1L50kp
// SIG // pxMopqd9Z4DmimJ4X7IvhNdXnFy/dygo8e1twyiPLI9A
// SIG // N0/B4YVEicQJTMXUpUMvdJX3bvh4IFgsE11glZo+TzOE
// SIG // 2rCIF96eTvSWsLxGoGyY0uDWiIwLAgMBAAGjggHtMIIB
// SIG // 6TAQBgkrBgEEAYI3FQEEAwIBADAdBgNVHQ4EFgQUSG5k
// SIG // 5VAF04KqFzc3IrVtqMp1ApUwGQYJKwYBBAGCNxQCBAwe
// SIG // CgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB
// SIG // /wQFMAMBAf8wHwYDVR0jBBgwFoAUci06AjGQQ7kUBU7h
// SIG // 6qfHMdEjiTQwWgYDVR0fBFMwUTBPoE2gS4ZJaHR0cDov
// SIG // L2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVj
// SIG // dHMvTWljUm9vQ2VyQXV0MjAxMV8yMDExXzAzXzIyLmNy
// SIG // bDBeBggrBgEFBQcBAQRSMFAwTgYIKwYBBQUHMAKGQmh0
// SIG // dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMv
// SIG // TWljUm9vQ2VyQXV0MjAxMV8yMDExXzAzXzIyLmNydDCB
// SIG // nwYDVR0gBIGXMIGUMIGRBgkrBgEEAYI3LgMwgYMwPwYI
// SIG // KwYBBQUHAgEWM2h0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2lvcHMvZG9jcy9wcmltYXJ5Y3BzLmh0bTBABggr
// SIG // BgEFBQcCAjA0HjIgHQBMAGUAZwBhAGwAXwBwAG8AbABp
// SIG // AGMAeQBfAHMAdABhAHQAZQBtAGUAbgB0AC4gHTANBgkq
// SIG // hkiG9w0BAQsFAAOCAgEAZ/KGpZjgVHkaLtPYdGcimwuW
// SIG // EeFjkplCln3SeQyQwWVfLiw++MNy0W2D/r4/6ArKO79H
// SIG // qaPzadtjvyI1pZddZYSQfYtGUFXYDJJ80hpLHPM8QotS
// SIG // 0LD9a+M+By4pm+Y9G6XUtR13lDni6WTJRD14eiPzE32m
// SIG // kHSDjfTLJgJGKsKKELukqQUMm+1o+mgulaAqPyprWElj
// SIG // HwlpblqYluSD9MCP80Yr3vw70L01724lruWvJ+3Q3fMO
// SIG // r5kol5hNDj0L8giJ1h/DMhji8MUtzluetEk5CsYKwsat
// SIG // ruWy2dsViFFFWDgycScaf7H0J/jeLDogaZiyWYlobm+n
// SIG // t3TDQAUGpgEqKD6CPxNNZgvAs0314Y9/HG8VfUWnduVA
// SIG // KmWjw11SYobDHWM2l4bf2vP48hahmifhzaWX0O5dY0Hj
// SIG // Wwechz4GdwbRBrF1HxS+YWG18NzGGwS+30HHDiju3mUv
// SIG // 7Jf2oVyW2ADWoUa9WfOXpQlLSBCZgB/QACnFsZulP0V3
// SIG // HjXG0qKin3p6IvpIlR+r+0cjgPWe+L9rt0uX4ut1eBrs
// SIG // 6jeZeRhL/9azI2h15q/6/IvrC4DqaTuv/DDtBEyO3991
// SIG // bWORPdGdVk5Pv4BXIqF4ETIheu9BCrE/+6jMpF3BoYib
// SIG // V3FWTkhFwELJm3ZbCoBIa/15n8G9bW1qyVJzEw16UM0x
// SIG // ghoKMIIaBgIBATCBlTB+MQswCQYDVQQGEwJVUzETMBEG
// SIG // A1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
// SIG // ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBTaWduaW5n
// SIG // IFBDQSAyMDExAhMzAAADri01UchTj1UdAAAAAAOuMA0G
// SIG // CWCGSAFlAwQCAQUAoIGuMBkGCSqGSIb3DQEJAzEMBgor
// SIG // BgEEAYI3AgEEMBwGCisGAQQBgjcCAQsxDjAMBgorBgEE
// SIG // AYI3AgEVMC8GCSqGSIb3DQEJBDEiBCCO+s2sRvJJRWD6
// SIG // ovdpICHZf9JvXqcGFd1FTahPLEEPvjBCBgorBgEEAYI3
// SIG // AgEMMTQwMqAUgBIATQBpAGMAcgBvAHMAbwBmAHShGoAY
// SIG // aHR0cDovL3d3dy5taWNyb3NvZnQuY29tMA0GCSqGSIb3
// SIG // DQEBAQUABIIBACez8UvvA5zEyUaKpj8MlJKTkzNSejax
// SIG // yTnJczXnIRptmHQasBD+W+2psvYCjrPjLtFQUE7dA2xy
// SIG // weA7U5wvlGRI82AuPQdxSf43QfFFv2cNxs9IPahPJ1St
// SIG // wAaOzUYpFc4ZhhWT4VhCkQT8yU2HeZViG4CXHEJ5OlPv
// SIG // y17cvan7ua0b7Jdra0cBGWouNYAEnGEkgObGB5H0yMRB
// SIG // ooFTSrLKyH/XSRja0pWADJ0+mKSNE5xyPI+MLaZTQuk8
// SIG // 5Up9G+LAk4koC/0+k5EFiTgDUmh/oD+P3VUdpqVxWkME
// SIG // PWWs8eX+n4TYvWbunQfA1UYu0ozM1jqd+TrQomkgSgDY
// SIG // gNahgheUMIIXkAYKKwYBBAGCNwMDATGCF4Awghd8Bgkq
// SIG // hkiG9w0BBwKgghdtMIIXaQIBAzEPMA0GCWCGSAFlAwQC
// SIG // AQUAMIIBUgYLKoZIhvcNAQkQAQSgggFBBIIBPTCCATkC
// SIG // AQEGCisGAQQBhFkKAwEwMTANBglghkgBZQMEAgEFAAQg
// SIG // 2Dss7fjfFM+zfpE4IgYAJ0/fZQTC3sl9ASvNA64CeT0C
// SIG // BmV7G2lJqhgTMjAyNDAxMDMxNjAzMTMuNjQ1WjAEgAIB
// SIG // 9KCB0aSBzjCByzELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjElMCMG
// SIG // A1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3BlcmF0aW9u
// SIG // czEnMCUGA1UECxMeblNoaWVsZCBUU1MgRVNOOjk2MDAt
// SIG // MDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNyb3NvZnQgVGlt
// SIG // ZS1TdGFtcCBTZXJ2aWNloIIR6jCCByAwggUIoAMCAQIC
// SIG // EzMAAAHY/EszpR3YhRUAAQAAAdgwDQYJKoZIhvcNAQEL
// SIG // BQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hp
// SIG // bmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT
// SIG // FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMd
// SIG // TWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAwHhcN
// SIG // MjMwNTI1MTkxMjQwWhcNMjQwMjAxMTkxMjQwWjCByzEL
// SIG // MAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x
// SIG // EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv
// SIG // c29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9z
// SIG // b2Z0IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UECxMe
// SIG // blNoaWVsZCBUU1MgRVNOOjk2MDAtMDVFMC1EOTQ3MSUw
// SIG // IwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2
// SIG // aWNlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC
// SIG // AgEAzXjrKdH14AM+xlBdDfv9BB3EBa4usJYk25kDZhZv
// SIG // A4tAnkPJ+G3drXebW7c07BJO3WNv55lmPZKhL2r23WEW
// SIG // zXPhLL/DX7+jDCJh/bQq+SsbNueDENI5qUbnK5t7h1uN
// SIG // tQn72tITUBCjdTUtK2ndVP2Tpnvlf0HknViqHwk4cX/3
// SIG // 7E3keNVm6lDQCTf5pd7Gzh/Gi4V8kxxu7Fbf1lEi6U9H
// SIG // y5TV2BkV82rydalDnj88o/OoYiss0CS04yq+xqUxhcko
// SIG // iHDFv58iujSu0Y38taHy3Ub77RyHSb6Zj0s3twh/z2BV
// SIG // NtU6oSIWdfgEu0ZQ6NfDEgxjx6UwlsKO5YLWNaWOkbzy
// SIG // ILhd623bb4aMo5+Zj27OaYIxjvN6HQTT+yJSgI+AWx1F
// SIG // 3h4rdw2toOwOI4nCqyzI6OrBnnrSaHiqKI+YjU12w8Cy
// SIG // jPR5VHV2Us+tn7QmVbivRQYJADvTETdqagZ6bQRn5ZZv
// SIG // ttRS5OhN71VzBhweXjoBXwMvOF5SInsnEAKyA7BJvdih
// SIG // yBThjoGZVsXuvZXl7zB42CZaaNlVTLS8Fy3d7Y0v9e96
// SIG // LhjEWoiyJy5uKCIKg7Y1CKr8GEFId0TesMHRe+Zzpq6a
// SIG // /MEcNZ/wSlkOZoUMWjAaqr5G7rtbC3kjD79jzGSHXVz2
// SIG // 4jrwMWnaj5AXDD1AZq8kmKC08cMCAwEAAaOCAUkwggFF
// SIG // MB0GA1UdDgQWBBT2049MfD2QS2J9DGQSOpxoeaiJVjAf
// SIG // BgNVHSMEGDAWgBSfpxVdAF5iXYP05dJlpxtTNRnpcjBf
// SIG // BgNVHR8EWDBWMFSgUqBQhk5odHRwOi8vd3d3Lm1pY3Jv
// SIG // c29mdC5jb20vcGtpb3BzL2NybC9NaWNyb3NvZnQlMjBU
// SIG // aW1lLVN0YW1wJTIwUENBJTIwMjAxMCgxKS5jcmwwbAYI
// SIG // KwYBBQUHAQEEYDBeMFwGCCsGAQUFBzAChlBodHRwOi8v
// SIG // d3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01p
// SIG // Y3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEw
// SIG // KDEpLmNydDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB/wQM
// SIG // MAoGCCsGAQUFBwMIMA4GA1UdDwEB/wQEAwIHgDANBgkq
// SIG // hkiG9w0BAQsFAAOCAgEArpwOmkj+PKCdVQ/kjBdf+0hY
// SIG // kxg+s8iwtybvR7S46mGKtRSVlMddCOV6lNGpXF01BVKF
// SIG // CFD0r33l/3V9DIKH1BvnDl3aJGhx0paOj2SA151ApaZE
// SIG // YsfcQjd+8hQaXMBi8xGZQyiW9oA6vxQRgvLJ05QUhDgY
// SIG // 1dHhPCAlVJDicyALbRMWnkFieUnq1K+t56ul+z5kL5NT
// SIG // ixZdxSaFuPucyqq4mPzyhrLDmgOWYwWRMlPqO/j94nC/
// SIG // 8GdBt8ppU/hGuIfX96uWlXRlQXbIWGv0noRpp1LxjAPI
// SIG // +QrduIp8fm1TrhfxP9i4yKfphGq8uZjk6wDVSi8ptpFt
// SIG // 3kMRfyPXI/O8Z3YmB+eV361jJPW7EU6MTqUW/RKWwgeX
// SIG // Esijb8UPA9NKndk53VRCRaYMgR0CUv1xCuaaHiWeaoJg
// SIG // hQI+FVDwf3T1x3U5tUFySN3Duw0cj1GQGDMENyoT5TNo
// SIG // T9jnwSSK/1bA7Id7Myy9mSbnq47IYcWBlW6DLnfWjaEY
// SIG // 5c9THJ+IhKLWuLWptuBcQ8h66hZuhFELv6Q2BA6rrr0B
// SIG // Rm+YJSHJOKyqgZ0Za0aIkY9KnYTt56KLVYP9Uj9M0ywt
// SIG // Ua8Y7kxFXtzyqxE27b3Dg6Bofddl67X+MGzMKa2vI2LM
// SIG // 8696X9PdOc8y/G/J/JLjAQoQWHxXbPdeik43OExjVPUw
// SIG // ggdxMIIFWaADAgECAhMzAAAAFcXna54Cm0mZAAAAAAAV
// SIG // MA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzET
// SIG // MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
// SIG // bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
// SIG // aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0
// SIG // aWZpY2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0yMTA5MzAx
// SIG // ODIyMjVaFw0zMDA5MzAxODMyMjVaMHwxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1l
// SIG // LVN0YW1wIFBDQSAyMDEwMIICIjANBgkqhkiG9w0BAQEF
// SIG // AAOCAg8AMIICCgKCAgEA5OGmTOe0ciELeaLL1yR5vQ7V
// SIG // gtP97pwHB9KpbE51yMo1V/YBf2xK4OK9uT4XYDP/XE/H
// SIG // ZveVU3Fa4n5KWv64NmeFRiMMtY0Tz3cywBAY6GB9alKD
// SIG // RLemjkZrBxTzxXb1hlDcwUTIcVxRMTegCjhuje3XD9gm
// SIG // U3w5YQJ6xKr9cmmvHaus9ja+NSZk2pg7uhp7M62AW36M
// SIG // EBydUv626GIl3GoPz130/o5Tz9bshVZN7928jaTjkY+y
// SIG // OSxRnOlwaQ3KNi1wjjHINSi947SHJMPgyY9+tVSP3PoF
// SIG // VZhtaDuaRr3tpK56KTesy+uDRedGbsoy1cCGMFxPLOJi
// SIG // ss254o2I5JasAUq7vnGpF1tnYN74kpEeHT39IM9zfUGa
// SIG // RnXNxF803RKJ1v2lIH1+/NmeRd+2ci/bfV+Autuqfjbs
// SIG // Nkz2K26oElHovwUDo9Fzpk03dJQcNIIP8BDyt0cY7afo
// SIG // mXw/TNuvXsLz1dhzPUNOwTM5TI4CvEJoLhDqhFFG4tG9
// SIG // ahhaYQFzymeiXtcodgLiMxhy16cg8ML6EgrXY28MyTZk
// SIG // i1ugpoMhXV8wdJGUlNi5UPkLiWHzNgY1GIRH29wb0f2y
// SIG // 1BzFa/ZcUlFdEtsluq9QBXpsxREdcu+N+VLEhReTwDwV
// SIG // 2xo3xwgVGD94q0W29R6HXtqPnhZyacaue7e3PmriLq0C
// SIG // AwEAAaOCAd0wggHZMBIGCSsGAQQBgjcVAQQFAgMBAAEw
// SIG // IwYJKwYBBAGCNxUCBBYEFCqnUv5kxJq+gpE8RjUpzxD/
// SIG // LwTuMB0GA1UdDgQWBBSfpxVdAF5iXYP05dJlpxtTNRnp
// SIG // cjBcBgNVHSAEVTBTMFEGDCsGAQQBgjdMg30BATBBMD8G
// SIG // CCsGAQUFBwIBFjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
// SIG // b20vcGtpb3BzL0RvY3MvUmVwb3NpdG9yeS5odG0wEwYD
// SIG // VR0lBAwwCgYIKwYBBQUHAwgwGQYJKwYBBAGCNxQCBAwe
// SIG // CgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB
// SIG // /wQFMAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/oolxiaNE9
// SIG // lJBb186aGMQwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDov
// SIG // L2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVj
// SIG // dHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3JsMFoG
// SIG // CCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNS
// SIG // b29DZXJBdXRfMjAxMC0wNi0yMy5jcnQwDQYJKoZIhvcN
// SIG // AQELBQADggIBAJ1VffwqreEsH2cBMSRb4Z5yS/ypb+pc
// SIG // FLY+TkdkeLEGk5c9MTO1OdfCcTY/2mRsfNB1OW27DzHk
// SIG // wo/7bNGhlBgi7ulmZzpTTd2YurYeeNg2LpypglYAA7AF
// SIG // vonoaeC6Ce5732pvvinLbtg/SHUB2RjebYIM9W0jVOR4
// SIG // U3UkV7ndn/OOPcbzaN9l9qRWqveVtihVJ9AkvUCgvxm2
// SIG // EhIRXT0n4ECWOKz3+SmJw7wXsFSFQrP8DJ6LGYnn8Atq
// SIG // gcKBGUIZUnWKNsIdw2FzLixre24/LAl4FOmRsqlb30mj
// SIG // dAy87JGA0j3mSj5mO0+7hvoyGtmW9I/2kQH2zsZ0/fZM
// SIG // cm8Qq3UwxTSwethQ/gpY3UA8x1RtnWN0SCyxTkctwRQE
// SIG // cb9k+SS+c23Kjgm9swFXSVRk2XPXfx5bRAGOWhmRaw2f
// SIG // pCjcZxkoJLo4S5pu+yFUa2pFEUep8beuyOiJXk+d0tBM
// SIG // drVXVAmxaQFEfnyhYWxz/gq77EFmPWn9y8FBSX5+k77L
// SIG // +DvktxW/tM4+pTFRhLy/AsGConsXHRWJjXD+57XQKBqJ
// SIG // C4822rpM+Zv/Cuk0+CQ1ZyvgDbjmjJnW4SLq8CdCPSWU
// SIG // 5nR0W2rRnj7tfqAxM328y+l7vzhwRNGQ8cirOoo6CGJ/
// SIG // 2XBjU02N7oJtpQUQwXEGahC0HVUzWLOhcGbyoYIDTTCC
// SIG // AjUCAQEwgfmhgdGkgc4wgcsxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xJTAjBgNVBAsTHE1pY3Jvc29mdCBBbWVyaWNhIE9w
// SIG // ZXJhdGlvbnMxJzAlBgNVBAsTHm5TaGllbGQgVFNTIEVT
// SIG // Tjo5NjAwLTA1RTAtRDk0NzElMCMGA1UEAxMcTWljcm9z
// SIG // b2Z0IFRpbWUtU3RhbXAgU2VydmljZaIjCgEBMAcGBSsO
// SIG // AwIaAxUASKfvsVCfn/OVa5283ZETEqQZry+ggYMwgYCk
// SIG // fjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1N
// SIG // aWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDANBgkq
// SIG // hkiG9w0BAQsFAAIFAOk/9vMwIhgPMjAyNDAxMDMxNTA4
// SIG // MzVaGA8yMDI0MDEwNDE1MDgzNVowdDA6BgorBgEEAYRZ
// SIG // CgQBMSwwKjAKAgUA6T/28wIBADAHAgEAAgItUTAHAgEA
// SIG // AgITmTAKAgUA6UFIcwIBADA2BgorBgEEAYRZCgQCMSgw
// SIG // JjAMBgorBgEEAYRZCgMCoAowCAIBAAIDB6EgoQowCAIB
// SIG // AAIDAYagMA0GCSqGSIb3DQEBCwUAA4IBAQCXOV9Dtfrw
// SIG // RjZN7Trp2g8+ivkJyVGNu0mxh7x/u5XwFHje56OXeAiy
// SIG // 2DpuqBs+DD9L4GOEvU7oj3lO+Jt6xzB/3qNo+rZLAi20
// SIG // 5T9cgYaWp+/WeYUjag+m1SPEApWcVpf5pyn47rSEGsbB
// SIG // GnEPPAVlGJyKuwxNYbCsopJ2TqnpAHrVRfOksViWH4Yt
// SIG // 1Pgx+SWACiBdlVuUCqkqtkN3kf19slsXrqrcVroHW2I3
// SIG // 22/H/QnmxMXEnf0EEUdLiYS3LutBgKIiQPn8ekdcEtz6
// SIG // GMShVedaTLmtTuxrcNdpTMdaN0PlvAE7RleqBqnfDuVK
// SIG // +ROaNG8HVYkuhYWU25Hd9BL6MYIEDTCCBAkCAQEwgZMw
// SIG // fDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWlj
// SIG // cm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTACEzMAAAHY
// SIG // /EszpR3YhRUAAQAAAdgwDQYJYIZIAWUDBAIBBQCgggFK
// SIG // MBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAvBgkq
// SIG // hkiG9w0BCQQxIgQg2TKM4a6z5E5esq6wys4lGE24yyg+
// SIG // MCRyMoITvij2GlcwgfoGCyqGSIb3DQEJEAIvMYHqMIHn
// SIG // MIHkMIG9BCA64yF//AmTd0UwATDbebu9zIt6N35r6to/
// SIG // EopPtrO+VDCBmDCBgKR+MHwxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1w
// SIG // IFBDQSAyMDEwAhMzAAAB2PxLM6Ud2IUVAAEAAAHYMCIE
// SIG // IMufw1yWnyYJANbopin6DD3/mX5ULRPh2S35T3jwQVdb
// SIG // MA0GCSqGSIb3DQEBCwUABIICAC8a3MFSUVtXUogAMi9e
// SIG // /aMVAYZ0jC3tAoeCOmPxeiJG7Df1K4g0uuI2h0rbqcHz
// SIG // +9/rjPNfD7b3Lv8tnvnbtJp0/mZn5VhvkRhaaoIENtsC
// SIG // pRO5H4cwQbyZ/E1GRsvnzItCsHjRyrIqfZrDXXOpqf6h
// SIG // HMrQlUCkbGGDKb9sy4o4leZSVVA4obR0xHuAYFFRMFlZ
// SIG // 5j+enO7Tm2it1htOF79sOs7YA75s5/jFMGOICWAftVYr
// SIG // sC08zagTOF8yil+ovhwJWyn9JBMZxAov3dNgHocRG1q9
// SIG // OsgxFNxpJoiJHH04u6NqOYxDkCLN+mV3XkP8nGYEvcNq
// SIG // ZvMck0fNePI7d+OvCWm2zTvFIGGopRnx9Fdp02tSy4Jp
// SIG // Wirg9v4X1z3yqBwUv+Dg//ZsGOa/2N0OdRneKqtWbC/i
// SIG // mSLcItfB60Aa4QV6nMeIpvnbERyafUklxomDE/wv1Ds5
// SIG // 2R4YlXjjt5uoasIOpFppA5llCXyRzDwq0sf2OpD+AdGq
// SIG // NU9NWXlMWAultPE16dpSlpD7XsyLP9AcTRWtPgVmK5Ru
// SIG // hVrwzlUKei0TRPKaDtIysdZLxVVv+cVBd7plLGwdf333
// SIG // aGH3huP8DV0vMfEi+/iDBc0MCkv7jZJdELsCaWHtAP6+
// SIG // NlreoNTIb+2Nt6pS+p53LpnK/S/Rhaey9ddiT6uv/VIv
// SIG // VEjJ
// SIG // End signature block
